{"ast":null,"code":"var _jsxFileName = \"/home/nhatnt/TN/FEcoffee/src/components/app-context/OrderDetailProvider.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useContext, createContext, useState, useEffect } from 'react';\nimport { SERVER_URL } from '../../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DetailContext = /*#__PURE__*/createContext();\nexport const useOrderDetails = () => {\n  _s();\n\n  return useContext(DetailContext);\n};\n\n_s(useOrderDetails, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nfunction OrderDetailProvider({\n  children\n}) {\n  _s2();\n\n  const [orderDetails, setOrderDetails] = useState([]);\n  const [errorMsg, setErrorMsg] = useState();\n  const [dataChanged, setDataChanged] = useState(true); // 'true' for first loading in 'useEffect'\n\n  const [detailLoading, setDetailLoading] = useState(true); // 'true' for first loading in 'useEffect'\n\n  useEffect(() => {\n    if (dataChanged) {\n      let token = sessionStorage.getItem('starbucks-admin-jwt');\n      fetch(SERVER_URL + `/detail/order=${children.props.id}`, {\n        headers: {\n          Authorization: token\n        }\n      }).then(response => response.json()).then(setOrderDetails).then(() => setDataChanged(false)).then(() => setDetailLoading(false));\n    }\n  }, [dataChanged, children.props.id]);\n\n  const deleteDetails = async details => {\n    const token = sessionStorage.getItem('starbucks-admin-jwt');\n    let urls = details.map(d => SERVER_URL + `/admin/detail/${d.id}`);\n    setDetailLoading(true);\n    await Promise.all(urls.map(url => fetch(url, {\n      method: 'DELETE',\n      headers: {\n        Authorization: token\n      }\n    })));\n    setDataChanged(true);\n  }; // no need adding order\n\n\n  const addDetail = () => {\n    return null;\n  };\n\n  const updateDetail = detail => {\n    const token = sessionStorage.getItem('starbucks-admin-jwt');\n    setDetailLoading(true);\n    fetch(SERVER_URL + `/admin/detail/${detail.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: token\n      },\n      body: JSON.stringify(detail)\n    }).then(() => setDataChanged(true));\n  }; // declare for passing to table (required), but no use because there's no validation in the back-end\n\n\n  const resetErrorMsg = () => {\n    setErrorMsg(); // set back to undefined (no errors)\n  };\n\n  return /*#__PURE__*/_jsxDEV(DetailContext.Provider, {\n    value: {\n      orderDetails,\n      detailLoading,\n      deleteDetails,\n      addDetail,\n      updateDetail,\n      errorMsg,\n      resetErrorMsg\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 3\n  }, this);\n}\n\n_s2(OrderDetailProvider, \"UVe1+MX2pWtbhASo8e01l7trLd8=\");\n\n_c = OrderDetailProvider;\nexport default OrderDetailProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderDetailProvider\");","map":{"version":3,"sources":["/home/nhatnt/TN/FEcoffee/src/components/app-context/OrderDetailProvider.jsx"],"names":["useContext","createContext","useState","useEffect","SERVER_URL","DetailContext","useOrderDetails","OrderDetailProvider","children","orderDetails","setOrderDetails","errorMsg","setErrorMsg","dataChanged","setDataChanged","detailLoading","setDetailLoading","token","sessionStorage","getItem","fetch","props","id","headers","Authorization","then","response","json","deleteDetails","details","urls","map","d","Promise","all","url","method","addDetail","updateDetail","detail","body","JSON","stringify","resetErrorMsg"],"mappings":"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","sourcesContent":["import { useContext, createContext, useState, useEffect } from 'react';\nimport { SERVER_URL } from '../../constants';\n\nconst DetailContext = createContext();\n\nexport const useOrderDetails = () => useContext(DetailContext);\n\nfunction OrderDetailProvider({ children }) {\n\tconst [orderDetails, setOrderDetails] = useState([]);\n\tconst [errorMsg, setErrorMsg] = useState();\n\tconst [dataChanged, setDataChanged] = useState(true); // 'true' for first loading in 'useEffect'\n\tconst [detailLoading, setDetailLoading] = useState(true); // 'true' for first loading in 'useEffect'\n\n\tuseEffect(() => {\n\t\tif (dataChanged) {\n\t\t\tlet token = sessionStorage.getItem('starbucks-admin-jwt');\n\t\t\tfetch(SERVER_URL + `/detail/order=${children.props.id}`, {\n\t\t\t\theaders: { Authorization: token },\n\t\t\t})\n\t\t\t\t.then((response) => response.json())\n\t\t\t\t.then(setOrderDetails)\n\t\t\t\t.then(() => setDataChanged(false))\n\t\t\t\t.then(() => setDetailLoading(false));\n\t\t}\n\t}, [dataChanged, children.props.id]);\n\n\tconst deleteDetails = async (details) => {\n\t\tconst token = sessionStorage.getItem('starbucks-admin-jwt');\n\t\tlet urls = details.map((d) => SERVER_URL + `/admin/detail/${d.id}`);\n\t\tsetDetailLoading(true);\n\t\tawait Promise.all(\n\t\t\turls.map((url) =>\n\t\t\t\tfetch(url, {\n\t\t\t\t\tmethod: 'DELETE',\n\t\t\t\t\theaders: { Authorization: token },\n\t\t\t\t})\n\t\t\t)\n\t\t);\n\t\tsetDataChanged(true);\n\t};\n\n\t// no need adding order\n\tconst addDetail = () => {\n\t\treturn null;\n\t};\n\n\tconst updateDetail = (detail) => {\n\t\tconst token = sessionStorage.getItem('starbucks-admin-jwt');\n\t\tsetDetailLoading(true);\n\t\tfetch(SERVER_URL + `/admin/detail/${detail.id}`, {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: token,\n\t\t\t},\n\t\t\tbody: JSON.stringify(detail),\n\t\t}).then(() => setDataChanged(true));\n\t};\n\n\t// declare for passing to table (required), but no use because there's no validation in the back-end\n\tconst resetErrorMsg = () => {\n\t\tsetErrorMsg(); // set back to undefined (no errors)\n\t};\n\n\treturn (\n\t\t<DetailContext.Provider value={{ orderDetails, detailLoading, deleteDetails, addDetail, updateDetail, errorMsg, resetErrorMsg }}>\n\t\t\t{children}\n\t\t</DetailContext.Provider>\n\t);\n}\n\nexport default OrderDetailProvider;\n"]},"metadata":{},"sourceType":"module"}