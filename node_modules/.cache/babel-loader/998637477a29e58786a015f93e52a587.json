{"ast":null,"code":"import \"antd/lib/avatar/style\";\nimport _Avatar from \"antd/lib/avatar\";\n\nvar _jsxFileName = \"/home/nhatnt/TN/FEcoffee/src/components/products/ProductFieldsTableCell.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { TextField, Button, Dialog, DialogTitle, DialogContentText, DialogContent, DialogActions } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { useProducts } from '../app-context/ProductProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ProductFieldsTableCell({\n  columnId,\n  inputStyle,\n  value,\n  onChange = f => f,\n  onBlur = f => f,\n  dlgOpen,\n  handleDlgOpen = f => f,\n  handleDlgClose = f => f\n}) {\n  _s();\n\n  const {\n    categories\n  } = useProducts();\n  const [imgURL, setImgURL] = React.useState('');\n  const [imgChanged, setImgChanged] = React.useState(false);\n\n  const handleImgChange = e => {\n    setImgURL(e.target.value);\n  };\n\n  const handleImgSave = () => {\n    onChange({\n      target: {\n        value: imgURL\n      }\n    });\n    setImgChanged(true);\n  };\n\n  React.useEffect(() => {\n    if (imgChanged) {\n      onBlur();\n      setImgChanged(false);\n    }\n  }, [imgChanged, onBlur]);\n\n  if (columnId === 'price') {\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      min: \"0\",\n      step: \"0.01\",\n      style: { ...inputStyle,\n        width: 100\n      },\n      value: value,\n      onChange: onChange,\n      onBlur: onBlur\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }, this);\n  }\n\n  if (columnId === 'image') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(_Avatar, {\n          shape: \"rounded\",\n          size: 128,\n          style: {\n            marginBottom: '4px'\n          },\n          src: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          style: {\n            width: 128\n          },\n          color: \"primary\",\n          onClick: handleDlgOpen,\n          children: \"update image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        fullWidth: true,\n        open: dlgOpen,\n        onClose: handleDlgClose,\n        \"aria-labelledby\": \"form-dialog-title\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Update Product Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: \"Please enter a new image URL to update! \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            value: imgURL,\n            label: \"Image URL\",\n            fullWidth: true,\n            onChange: handleImgChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleDlgClose,\n            color: \"primary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleImgSave,\n            color: \"primary\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (columnId === 'category') {\n    return /*#__PURE__*/_jsxDEV(Autocomplete, {\n      options: categories,\n      groupBy: category => category.group,\n      style: {\n        width: 200,\n        margin: 0,\n        padding: 0\n      },\n      size: \"small\",\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n        onBlur: onBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 30\n      }, this),\n      value: categories[categories.map(category => category.id).indexOf(value.id)],\n      getOptionLabel: value => value.name,\n      onChange: (event, newValue) => onChange(newValue),\n      disableClearable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    style: inputStyle,\n    value: value,\n    onChange: onChange,\n    onBlur: onBlur\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductFieldsTableCell, \"ws5yLKcOin3Jt3ed63h1n4V4Og8=\", false, function () {\n  return [useProducts];\n});\n\n_c = ProductFieldsTableCell;\nexport default ProductFieldsTableCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductFieldsTableCell\");","map":{"version":3,"sources":["/home/nhatnt/TN/FEcoffee/src/components/products/ProductFieldsTableCell.jsx"],"names":["React","TextField","Button","Dialog","DialogTitle","DialogContentText","DialogContent","DialogActions","Autocomplete","useProducts","ProductFieldsTableCell","columnId","inputStyle","value","onChange","f","onBlur","dlgOpen","handleDlgOpen","handleDlgClose","categories","imgURL","setImgURL","useState","imgChanged","setImgChanged","handleImgChange","e","target","handleImgSave","useEffect","width","marginBottom","category","group","margin","padding","params","map","id","indexOf","name","event","newValue"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Avatar } from 'antd';\nimport { TextField, Button, Dialog, DialogTitle, DialogContentText, DialogContent, DialogActions } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { useProducts } from '../app-context/ProductProvider';\n\nfunction ProductFieldsTableCell({\n\tcolumnId,\n\tinputStyle,\n\tvalue,\n\tonChange = (f) => f,\n\tonBlur = (f) => f,\n\tdlgOpen,\n\thandleDlgOpen = (f) => f,\n\thandleDlgClose = (f) => f,\n}) {\n\tconst { categories } = useProducts();\n\tconst [imgURL, setImgURL] = React.useState('');\n\tconst [imgChanged, setImgChanged] = React.useState(false);\n\n\tconst handleImgChange = (e) => {\n\t\tsetImgURL(e.target.value);\n\t};\n\n\tconst handleImgSave = () => {\n\t\tonChange({ target: { value: imgURL } });\n\t\tsetImgChanged(true);\n\t};\n\n\tReact.useEffect(() => {\n\t\tif (imgChanged) {\n\t\t\tonBlur();\n\t\t\tsetImgChanged(false);\n\t\t}\n\t}, [imgChanged, onBlur]);\n\n\tif (columnId === 'price') {\n\t\treturn <input type='number' min='0' step='0.01' style={{ ...inputStyle, width: 100 }} value={value} onChange={onChange} onBlur={onBlur} />;\n\t}\n\tif (columnId === 'image') {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div>\n\t\t\t\t\t<Avatar shape='rounded' size={128} style={{ marginBottom: '4px' }} src={value} />\n\t\t\t\t\t<br />\n\t\t\t\t\t<Button size='small' style={{ width: 128 }} color='primary' onClick={handleDlgOpen}>\n\t\t\t\t\t\tupdate image\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t\t<Dialog fullWidth open={dlgOpen} onClose={handleDlgClose} aria-labelledby='form-dialog-title'>\n\t\t\t\t\t<DialogTitle>Update Product Image</DialogTitle>\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<DialogContentText>Please enter a new image URL to update! </DialogContentText>\n\t\t\t\t\t\t<TextField autoFocus value={imgURL} label='Image URL' fullWidth onChange={handleImgChange} />\n\t\t\t\t\t</DialogContent>\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<Button onClick={handleDlgClose} color='primary'>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button onClick={handleImgSave} color='primary'>\n\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</DialogActions>\n\t\t\t\t</Dialog>\n\t\t\t</>\n\t\t);\n\t}\n\tif (columnId === 'category') {\n\t\treturn (\n\t\t\t<Autocomplete\n\t\t\t\toptions={categories}\n\t\t\t\tgroupBy={(category) => category.group}\n\t\t\t\tstyle={{ width: 200, margin: 0, padding: 0 }}\n\t\t\t\tsize='small'\n\t\t\t\trenderInput={(params) => <TextField {...params} onBlur={onBlur} />}\n\t\t\t\tvalue={categories[categories.map((category) => category.id).indexOf(value.id)]}\n\t\t\t\tgetOptionLabel={(value) => value.name}\n\t\t\t\tonChange={(event, newValue) => onChange(newValue)}\n\t\t\t\tdisableClearable\n\t\t\t/>\n\t\t);\n\t}\n\treturn <input style={inputStyle} value={value} onChange={onChange} onBlur={onBlur} />;\n}\n\nexport default ProductFieldsTableCell;\n"]},"metadata":{},"sourceType":"module"}