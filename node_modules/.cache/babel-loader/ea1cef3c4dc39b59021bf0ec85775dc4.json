{"ast":null,"code":"import \"antd/lib/spin/style\";\nimport _Spin from \"antd/lib/spin\";\n\nvar _jsxFileName = \"/home/nhatnt/TN/FEcoffee/src/client/components/user/SignUpForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { TextField, Checkbox, FormControlLabel, Button, Snackbar, withStyles } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport VisibilityOffOutlinedIcon from '@material-ui/icons/VisibilityOffOutlined';\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\nimport { useUser } from '../app-context/UserProvider';\nimport './SignUpForm.css';\nimport { Redirect } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomTextField = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: '#00a862'\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: '#00a862'\n    }\n  }\n})(TextField);\nconst GreenCheckbox = withStyles({\n  root: {\n    color: '#007235',\n    transform: 'scale(1.4)'\n  }\n})(props => /*#__PURE__*/_jsxDEV(Checkbox, {\n  color: \"default\",\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 15\n}, this));\nconst StyledButton = withStyles(() => ({\n  root: {\n    textTransform: 'none',\n    borderRadius: '1.8rem',\n    backgroundColor: '#00a862',\n    boxShadow: '0 0 6px rgba(0,0,0,.24), 0 8px 12px rgba(0,0,0,.14)',\n    fontSize: 18,\n    fontFamily: 'SoDo Sans SemiBold',\n    width: 180,\n    height: 60,\n    color: 'white',\n    '&:hover': {\n      backgroundColor: '#007235'\n    }\n  }\n}))(Button);\nconst initUser = {\n  fullname: '',\n  phone: '',\n  address: '',\n  email: '',\n  username: ''\n};\n\nfunction SignUpForm() {\n  _s();\n\n  const {\n    signUp,\n    userLoading,\n    errorMsg,\n    resetErrorMsg\n  } = useUser();\n  const [record, setRecord] = React.useState(initUser);\n  const [emailError, setEmailError] = React.useState(false);\n  const [phoneError, setPhoneError] = React.useState(false);\n  const [usernameError, setUsernameError] = React.useState(false);\n  const [pwdError, setPwdError] = React.useState(false);\n  const [pwdConfirmError, setPwdConfirmError] = React.useState(false);\n  const [pwdValues, setPwdValues] = React.useState({\n    password: '',\n    showPassword: false\n  });\n  const [confirmPwdValues, setConfirmPwdValues] = React.useState({\n    confirmPwd: '',\n    showConfirmPassword: false\n  });\n  const [errors, setErrors] = React.useState(true);\n  const [openErrorMsg, setOpenErrorMsg] = React.useState(false);\n\n  const handleSubmit = () => {\n    if (errors === false) {\n      signUp(record);\n    } else {\n      setOpenErrorMsg(true);\n    }\n  }; // error message from back-end validation\n\n\n  React.useEffect(() => {\n    if (errorMsg !== undefined) {\n      setOpenErrorMsg(true);\n    }\n  }, [errorMsg]);\n\n  const handleChange = (fieldName, value) => {\n    setRecord({ ...record,\n      [fieldName]: value\n    });\n  };\n\n  const handleErrorClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenErrorMsg(false);\n    resetErrorMsg();\n  };\n\n  React.useEffect(() => {\n    if (record.fullname === '' || record.address === '' || emailError || phoneError || usernameError || pwdError || pwdConfirmError) {\n      setErrors(true);\n    } else {\n      setErrors(false);\n    }\n  }, [record, emailError, phoneError, usernameError, pwdError, pwdConfirmError, setErrors]);\n\n  const handleEmailChange = fieldName => ({\n    target: {\n      value\n    }\n  }) => {\n    handleChange(fieldName, value);\n\n    if (/^\\w+([-.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/.test(value)) {\n      setEmailError(false);\n    } else {\n      setEmailError(true);\n    }\n  };\n\n  const handlePhoneChange = fieldName => ({\n    target: {\n      value\n    }\n  }) => {\n    handleChange(fieldName, value);\n\n    if (/^[0-9]{10,11}$/.test(value)) {\n      setPhoneError(false);\n    } else {\n      setPhoneError(true);\n    }\n  };\n\n  const handleUsernameChange = fieldName => ({\n    target: {\n      value\n    }\n  }) => {\n    handleChange(fieldName, value);\n\n    if (/^(?=.{4,20}$)[a-zA-Z0-9._]+$/.test(value)) {\n      setUsernameError(false);\n    } else {\n      setUsernameError(true);\n    }\n  };\n\n  const handlePasswordChange = fieldName => ({\n    target: {\n      value\n    }\n  }) => {\n    handleChange(fieldName, value);\n    setPwdValues({ ...pwdValues,\n      [fieldName]: value\n    });\n\n    if (/^(?=\\S+$).{4,}$/.test(value)) {\n      setPwdError(false);\n    } else {\n      setPwdError(true);\n    }\n\n    if (value === confirmPwdValues.confirmPwd) {\n      setPwdConfirmError(false);\n    } else {\n      setPwdConfirmError(true);\n    }\n  };\n\n  const handleConfirmPasswordChange = fieldName => ({\n    target: {\n      value\n    }\n  }) => {\n    setConfirmPwdValues({ ...confirmPwdValues,\n      [fieldName]: value\n    });\n\n    if (value !== pwdValues.password) {\n      setPwdConfirmError(true);\n    } else {\n      setPwdConfirmError(false);\n    }\n  };\n\n  const handleClickShowPassword = e => {\n    e.preventDefault();\n    setPwdValues({ ...pwdValues,\n      showPassword: !pwdValues.showPassword\n    });\n  };\n\n  const handleClickShowConfirmPassword = e => {\n    e.preventDefault();\n    setConfirmPwdValues({ ...confirmPwdValues,\n      showConfirmPassword: !confirmPwdValues.showConfirmPassword\n    });\n  };\n\n  if (sessionStorage[\"starbucks-member\"]) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 10\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signUpForm\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signUpForm__container\",\n      children: [/*#__PURE__*/_jsxDEV(_Spin, {\n        spinning: userLoading,\n        style: {\n          marginTop: '20vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"signUpForm__form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"signUpForm__section\",\n            children: \"Personal Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signUpForm__inputContainer\",\n            children: /*#__PURE__*/_jsxDEV(CustomTextField, {\n              name: \"fullname\",\n              label: \"Full Name\",\n              type: \"text\",\n              InputLabelProps: {\n                style: {\n                  fontFamily: 'SoDo Sans SemiBold'\n                }\n              },\n              InputProps: {\n                style: {\n                  fontWeight: '900'\n                }\n              },\n              fullWidth: true,\n              required: true,\n              value: record.fullname,\n              onChange: e => handleChange('fullname', e.target.value),\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signUpForm__inputContainer\",\n            children: /*#__PURE__*/_jsxDEV(CustomTextField, {\n              name: \"username\",\n              label: \"Username\",\n              type: \"text\",\n              InputLabelProps: {\n                style: {\n                  fontFamily: 'SoDo Sans SemiBold'\n                }\n              },\n              InputProps: {\n                style: {\n                  fontWeight: '900'\n                }\n              },\n              fullWidth: true,\n              required: true,\n              value: record.username,\n              onChange: handleUsernameChange('username'),\n              error: usernameError,\n              helperText: usernameError ? 'Username must be 4 to 20 chars, only alphanumeric chars, underscores and dots are allowed.' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signUpForm__inputContainer\",\n            children: /*#__PURE__*/_jsxDEV(CustomTextField, {\n              name: \"phone\",\n              label: \"Phone Number\",\n              type: \"text\",\n              InputLabelProps: {\n                style: {\n                  fontFamily: 'SoDo Sans SemiBold'\n                }\n              },\n              InputProps: {\n                style: {\n                  fontWeight: '900'\n                }\n              },\n              fullWidth: true,\n              required: true,\n              value: record.phone,\n              onChange: handlePhoneChange('phone'),\n              error: phoneError,\n              helperText: phoneError ? 'Phone number must be 10 to 11 digits.' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signUpForm__inputContainer\",\n            children: /*#__PURE__*/_jsxDEV(CustomTextField, {\n              name: \"address\",\n              label: \"Address\",\n              type: \"text\",\n              InputLabelProps: {\n                style: {\n                  fontFamily: 'SoDo Sans SemiBold'\n                }\n              },\n              InputProps: {\n                style: {\n                  fontWeight: '900'\n                }\n              },\n              fullWidth: true,\n              required: true,\n              value: record.address,\n              onChange: e => handleChange('address', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"signUpForm__section\",\n            style: {\n              marginTop: 36\n            },\n            children: \"Account Security\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signUpForm__inputContainer\",\n            children: /*#__PURE__*/_jsxDEV(CustomTextField, {\n              name: \"email\",\n              label: \"Email Address\",\n              type: \"email\",\n              InputLabelProps: {\n                style: {\n                  fontFamily: 'SoDo Sans SemiBold'\n                }\n              },\n              InputProps: {\n                style: {\n                  fontWeight: '900'\n                }\n              },\n              fullWidth: true,\n              required: true,\n              value: record.email,\n              onChange: handleEmailChange('email'),\n              error: emailError,\n              helperText: emailError ? 'E-mail must be in following format: email@example.com' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signUpForm__inputContainer\",\n            children: [/*#__PURE__*/_jsxDEV(CustomTextField, {\n              name: \"password\",\n              label: \"Password\",\n              InputLabelProps: {\n                style: {\n                  fontFamily: 'SoDo Sans SemiBold'\n                }\n              },\n              InputProps: {\n                style: {\n                  fontWeight: '900'\n                }\n              },\n              fullWidth: true,\n              required: true,\n              type: pwdValues.showPassword ? 'text' : 'password',\n              value: pwdValues.password,\n              onChange: handlePasswordChange('password'),\n              error: pwdError,\n              helperText: pwdError ? 'Password must be at least 4 chars, and not contains whitespace.' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 8\n            }, this), pwdValues.showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOutlinedIcon, {\n              className: \"signUpForm__visibilityIcon\",\n              onClick: handleClickShowPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 9\n            }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffOutlinedIcon, {\n              className: \"signUpForm__visibilityIcon\",\n              onClick: handleClickShowPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signUpForm__inputContainer\",\n            children: [/*#__PURE__*/_jsxDEV(CustomTextField, {\n              name: \"confirmPwd\",\n              label: \"Confirm Password\",\n              InputLabelProps: {\n                style: {\n                  fontFamily: 'SoDo Sans SemiBold'\n                }\n              },\n              InputProps: {\n                style: {\n                  fontWeight: '900'\n                }\n              },\n              fullWidth: true,\n              required: true,\n              type: confirmPwdValues.showConfirmPassword ? 'text' : 'password',\n              value: confirmPwdValues.confirmPwd,\n              onChange: handleConfirmPasswordChange('confirmPwd'),\n              error: pwdConfirmError,\n              helperText: pwdConfirmError ? 'Password and confirmation password do not match!' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 8\n            }, this), confirmPwdValues.showConfirmPassword ? /*#__PURE__*/_jsxDEV(VisibilityOutlinedIcon, {\n              className: \"signUpForm__visibilityIcon\",\n              onClick: handleClickShowConfirmPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 9\n            }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffOutlinedIcon, {\n              className: \"signUpForm__visibilityIcon\",\n              onClick: handleClickShowConfirmPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"signUpForm__rewards\",\n            children: \"COLLECT MORE STARS & EARN REWARDS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"signUpForm__span\",\n            children: \"Email is a great way to know about offers and what\\u2019s new from Starbucks.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 12\n            },\n            children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(GreenCheckbox, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 18\n              }, this),\n              label: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontFamily: 'SoDo Sans SemiBold',\n                  fontSize: '90%'\n                },\n                children: \"Yes, I\\u2019d like email from Sunn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 12,\n              marginLeft: 30,\n              fontWeight: 500,\n              color: 'gray'\n            },\n            children: \"Know about initiatives, announcements and product offers.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n            style: {\n              float: 'right',\n              margin: '24px 0'\n            },\n            onClick: handleSubmit,\n            children: \"Create account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: openErrorMsg,\n        autoHideDuration: 5000,\n        onClose: handleErrorClose,\n        children: /*#__PURE__*/_jsxDEV(MuiAlert, {\n          elevation: 6,\n          variant: \"filled\",\n          severity: \"error\",\n          onClose: handleErrorClose,\n          children: errorMsg !== undefined ? errorMsg : 'Please input all required fields!'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 3\n  }, this);\n}\n\n_s(SignUpForm, \"QJUj1QP0zaA+nwsE7NjpyTrOTe0=\", false, function () {\n  return [useUser];\n});\n\n_c = SignUpForm;\nexport default SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"sources":["/home/nhatnt/TN/FEcoffee/src/client/components/user/SignUpForm.jsx"],"names":["React","TextField","Checkbox","FormControlLabel","Button","Snackbar","withStyles","MuiAlert","VisibilityOffOutlinedIcon","VisibilityOutlinedIcon","useUser","Redirect","CustomTextField","root","color","borderBottomColor","GreenCheckbox","transform","props","StyledButton","textTransform","borderRadius","backgroundColor","boxShadow","fontSize","fontFamily","width","height","initUser","fullname","phone","address","email","username","SignUpForm","signUp","userLoading","errorMsg","resetErrorMsg","record","setRecord","useState","emailError","setEmailError","phoneError","setPhoneError","usernameError","setUsernameError","pwdError","setPwdError","pwdConfirmError","setPwdConfirmError","pwdValues","setPwdValues","password","showPassword","confirmPwdValues","setConfirmPwdValues","confirmPwd","showConfirmPassword","errors","setErrors","openErrorMsg","setOpenErrorMsg","handleSubmit","useEffect","undefined","handleChange","fieldName","value","handleErrorClose","event","reason","handleEmailChange","target","test","handlePhoneChange","handleUsernameChange","handlePasswordChange","handleConfirmPasswordChange","handleClickShowPassword","e","preventDefault","handleClickShowConfirmPassword","sessionStorage","marginTop","style","fontWeight","marginLeft","float","margin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Spin } from 'antd';\nimport { TextField, Checkbox, FormControlLabel, Button, Snackbar, withStyles } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport VisibilityOffOutlinedIcon from '@material-ui/icons/VisibilityOffOutlined';\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\nimport { useUser } from '../app-context/UserProvider';\nimport './SignUpForm.css';\nimport { Redirect } from 'react-router';\n\nconst CustomTextField = withStyles({\n\troot: {\n\t\t'& label.Mui-focused': {\n\t\t\tcolor: '#00a862',\n\t\t},\n\t\t'& .MuiInput-underline:after': {\n\t\t\tborderBottomColor: '#00a862',\n\t\t},\n\t},\n})(TextField);\n\nconst GreenCheckbox = withStyles({\n\troot: {\n\t\tcolor: '#007235',\n\t\ttransform: 'scale(1.4)',\n\t},\n})((props) => <Checkbox color='default' {...props} />);\n\nconst StyledButton = withStyles(() => ({\n\troot: {\n\t\ttextTransform: 'none',\n\t\tborderRadius: '1.8rem',\n\t\tbackgroundColor: '#00a862',\n\t\tboxShadow: '0 0 6px rgba(0,0,0,.24), 0 8px 12px rgba(0,0,0,.14)',\n\t\tfontSize: 18,\n\t\tfontFamily: 'SoDo Sans SemiBold',\n\t\twidth: 180,\n\t\theight: 60,\n\t\tcolor: 'white',\n\t\t'&:hover': {\n\t\t\tbackgroundColor: '#007235',\n\t\t},\n\t},\n}))(Button);\n\nconst initUser = {\n\tfullname: '',\n\tphone: '',\n\taddress: '',\n\temail: '',\n\tusername: '',\n};\n\nfunction SignUpForm() {\n\tconst { signUp, userLoading, errorMsg, resetErrorMsg } = useUser();\n\tconst [record, setRecord] = React.useState(initUser);\n\tconst [emailError, setEmailError] = React.useState(false);\n\tconst [phoneError, setPhoneError] = React.useState(false);\n\tconst [usernameError, setUsernameError] = React.useState(false);\n\tconst [pwdError, setPwdError] = React.useState(false);\n\tconst [pwdConfirmError, setPwdConfirmError] = React.useState(false);\n\tconst [pwdValues, setPwdValues] = React.useState({ password: '', showPassword: false });\n\tconst [confirmPwdValues, setConfirmPwdValues] = React.useState({ confirmPwd: '', showConfirmPassword: false });\n\tconst [errors, setErrors] = React.useState(true);\n\tconst [openErrorMsg, setOpenErrorMsg] = React.useState(false);\n\n\tconst handleSubmit = () => {\n\t\tif (errors === false) {\n\t\t\tsignUp(record);\n\t\t} else {\n\t\t\tsetOpenErrorMsg(true);\n\t\t}\n\t};\n\n\t// error message from back-end validation\n\tReact.useEffect(() => {\n\t\tif (errorMsg !== undefined) {\n\t\t\tsetOpenErrorMsg(true);\n\t\t}\n\t}, [errorMsg]);\n\n\tconst handleChange = (fieldName, value) => {\n\t\tsetRecord({ ...record, [fieldName]: value });\n\t};\n\n\tconst handleErrorClose = (event, reason) => {\n\t\tif (reason === 'clickaway') {\n\t\t\treturn;\n\t\t}\n\t\tsetOpenErrorMsg(false);\n\t\tresetErrorMsg();\n\t};\n\n\tReact.useEffect(() => {\n\t\tif (record.fullname === '' || record.address === '' || emailError || phoneError || usernameError || pwdError || pwdConfirmError) {\n\t\t\tsetErrors(true);\n\t\t} else {\n\t\t\tsetErrors(false);\n\t\t}\n\t}, [record, emailError, phoneError, usernameError, pwdError, pwdConfirmError, setErrors]);\n\n\tconst handleEmailChange = (fieldName) => ({ target: { value } }) => {\n\t\thandleChange(fieldName, value);\n\t\tif (/^\\w+([-.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/.test(value)) {\n\t\t\tsetEmailError(false);\n\t\t} else {\n\t\t\tsetEmailError(true);\n\t\t}\n\t};\n\n\tconst handlePhoneChange = (fieldName) => ({ target: { value } }) => {\n\t\thandleChange(fieldName, value);\n\t\tif (/^[0-9]{10,11}$/.test(value)) {\n\t\t\tsetPhoneError(false);\n\t\t} else {\n\t\t\tsetPhoneError(true);\n\t\t}\n\t};\n\n\tconst handleUsernameChange = (fieldName) => ({ target: { value } }) => {\n\t\thandleChange(fieldName, value);\n\t\tif (/^(?=.{4,20}$)[a-zA-Z0-9._]+$/.test(value)) {\n\t\t\tsetUsernameError(false);\n\t\t} else {\n\t\t\tsetUsernameError(true);\n\t\t}\n\t};\n\n\tconst handlePasswordChange = (fieldName) => ({ target: { value } }) => {\n\t\thandleChange(fieldName, value);\n\t\tsetPwdValues({ ...pwdValues, [fieldName]: value });\n\t\tif (/^(?=\\S+$).{4,}$/.test(value)) {\n\t\t\tsetPwdError(false);\n\t\t} else {\n\t\t\tsetPwdError(true);\n\t\t}\n\t\tif (value === confirmPwdValues.confirmPwd) {\n\t\t\tsetPwdConfirmError(false);\n\t\t} else {\n\t\t\tsetPwdConfirmError(true);\n\t\t}\n\t};\n\n\tconst handleConfirmPasswordChange = (fieldName) => ({ target: { value } }) => {\n\t\tsetConfirmPwdValues({ ...confirmPwdValues, [fieldName]: value });\n\t\tif (value !== pwdValues.password) {\n\t\t\tsetPwdConfirmError(true);\n\t\t} else {\n\t\t\tsetPwdConfirmError(false);\n\t\t}\n\t};\n\n\tconst handleClickShowPassword = (e) => {\n\t\te.preventDefault();\n\t\tsetPwdValues({ ...pwdValues, showPassword: !pwdValues.showPassword });\n\t};\n\n\tconst handleClickShowConfirmPassword = (e) => {\n\t\te.preventDefault();\n\t\tsetConfirmPwdValues({ ...confirmPwdValues, showConfirmPassword: !confirmPwdValues.showConfirmPassword });\n\t};\n\tif(sessionStorage[\"starbucks-member\"]){\n\t\treturn <Redirect to='/'  />\n\t}\n\n\treturn (\n\t\t<div className='signUpForm'>\n\t\t\t<div className='signUpForm__container'>\n\t\t\t\t<Spin spinning={userLoading} style={{ marginTop: '20vh' }}>\n\t\t\t\t\t<form className='signUpForm__form'>\n\t\t\t\t\t\t<h4 className='signUpForm__section'>Personal Information</h4>\n\t\t\t\t\t\t<div className='signUpForm__inputContainer'>\n\t\t\t\t\t\t\t<CustomTextField\n\t\t\t\t\t\t\t\tname='fullname'\n\t\t\t\t\t\t\t\tlabel='Full Name'\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\t\tstyle: { fontFamily: 'SoDo Sans SemiBold' },\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tInputProps={{ style: { fontWeight: '900' } }}\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tvalue={record.fullname}\n\t\t\t\t\t\t\t\tonChange={(e) => handleChange('fullname', e.target.value)}\n\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='signUpForm__inputContainer'>\n\t\t\t\t\t\t\t<CustomTextField\n\t\t\t\t\t\t\t\tname='username'\n\t\t\t\t\t\t\t\tlabel='Username'\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\t\tstyle: { fontFamily: 'SoDo Sans SemiBold' },\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tInputProps={{ style: { fontWeight: '900' } }}\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tvalue={record.username}\n\t\t\t\t\t\t\t\tonChange={handleUsernameChange('username')}\n\t\t\t\t\t\t\t\terror={usernameError}\n\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\tusernameError ? 'Username must be 4 to 20 chars, only alphanumeric chars, underscores and dots are allowed.' : ''\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='signUpForm__inputContainer'>\n\t\t\t\t\t\t\t<CustomTextField\n\t\t\t\t\t\t\t\tname='phone'\n\t\t\t\t\t\t\t\tlabel='Phone Number'\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\t\tstyle: { fontFamily: 'SoDo Sans SemiBold' },\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tInputProps={{ style: { fontWeight: '900' } }}\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tvalue={record.phone}\n\t\t\t\t\t\t\t\tonChange={handlePhoneChange('phone')}\n\t\t\t\t\t\t\t\terror={phoneError}\n\t\t\t\t\t\t\t\thelperText={phoneError ? 'Phone number must be 10 to 11 digits.' : ''}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='signUpForm__inputContainer'>\n\t\t\t\t\t\t\t<CustomTextField\n\t\t\t\t\t\t\t\tname='address'\n\t\t\t\t\t\t\t\tlabel='Address'\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\t\tstyle: { fontFamily: 'SoDo Sans SemiBold' },\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tInputProps={{ style: { fontWeight: '900' } }}\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tvalue={record.address}\n\t\t\t\t\t\t\t\tonChange={(e) => handleChange('address', e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<h4 className='signUpForm__section' style={{ marginTop: 36 }}>\n\t\t\t\t\t\t\tAccount Security\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t<div className='signUpForm__inputContainer'>\n\t\t\t\t\t\t\t<CustomTextField\n\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\tlabel='Email Address'\n\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\t\tstyle: { fontFamily: 'SoDo Sans SemiBold' },\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tInputProps={{ style: { fontWeight: '900' } }}\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tvalue={record.email}\n\t\t\t\t\t\t\t\tonChange={handleEmailChange('email')}\n\t\t\t\t\t\t\t\terror={emailError}\n\t\t\t\t\t\t\t\thelperText={emailError ? 'E-mail must be in following format: email@example.com' : ''}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='signUpForm__inputContainer'>\n\t\t\t\t\t\t\t<CustomTextField\n\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\t\tstyle: { fontFamily: 'SoDo Sans SemiBold' },\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tInputProps={{ style: { fontWeight: '900' } }}\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\ttype={pwdValues.showPassword ? 'text' : 'password'}\n\t\t\t\t\t\t\t\tvalue={pwdValues.password}\n\t\t\t\t\t\t\t\tonChange={handlePasswordChange('password')}\n\t\t\t\t\t\t\t\terror={pwdError}\n\t\t\t\t\t\t\t\thelperText={pwdError ? 'Password must be at least 4 chars, and not contains whitespace.' : ''}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{pwdValues.showPassword ? (\n\t\t\t\t\t\t\t\t<VisibilityOutlinedIcon className='signUpForm__visibilityIcon' onClick={handleClickShowPassword} />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<VisibilityOffOutlinedIcon className='signUpForm__visibilityIcon' onClick={handleClickShowPassword} />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='signUpForm__inputContainer'>\n\t\t\t\t\t\t\t<CustomTextField\n\t\t\t\t\t\t\t\tname='confirmPwd'\n\t\t\t\t\t\t\t\tlabel='Confirm Password'\n\t\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\t\tstyle: { fontFamily: 'SoDo Sans SemiBold' },\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tInputProps={{ style: { fontWeight: '900' } }}\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\ttype={confirmPwdValues.showConfirmPassword ? 'text' : 'password'}\n\t\t\t\t\t\t\t\tvalue={confirmPwdValues.confirmPwd}\n\t\t\t\t\t\t\t\tonChange={handleConfirmPasswordChange('confirmPwd')}\n\t\t\t\t\t\t\t\terror={pwdConfirmError}\n\t\t\t\t\t\t\t\thelperText={pwdConfirmError ? 'Password and confirmation password do not match!' : ''}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{confirmPwdValues.showConfirmPassword ? (\n\t\t\t\t\t\t\t\t<VisibilityOutlinedIcon className='signUpForm__visibilityIcon' onClick={handleClickShowConfirmPassword} />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<VisibilityOffOutlinedIcon className='signUpForm__visibilityIcon' onClick={handleClickShowConfirmPassword} />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<h4 className='signUpForm__rewards'>COLLECT MORE STARS & EARN REWARDS</h4>\n\t\t\t\t\t\t<span className='signUpForm__span'>Email is a great way to know about offers and what’s new from Starbucks.</span>\n\t\t\t\t\t\t<div style={{ marginTop: 12 }}>\n\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\tcontrol={<GreenCheckbox />}\n\t\t\t\t\t\t\t\tlabel={<div style={{ fontFamily: 'SoDo Sans SemiBold', fontSize: '90%' }}>Yes, I’d like email from Sunn</div>}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div style={{ marginTop: 12, marginLeft: 30, fontWeight: 500, color: 'gray' }}>\n\t\t\t\t\t\t\tKnow about initiatives, announcements and product offers.\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<StyledButton style={{ float: 'right', margin: '24px 0' }} onClick={handleSubmit}>\n\t\t\t\t\t\t\tCreate account\n\t\t\t\t\t\t</StyledButton>\n\t\t\t\t\t</form>\n\t\t\t\t</Spin>\n\t\t\t\t<Snackbar open={openErrorMsg} autoHideDuration={5000} onClose={handleErrorClose}>\n\t\t\t\t\t<MuiAlert elevation={6} variant='filled' severity='error' onClose={handleErrorClose}>\n\t\t\t\t\t\t{errorMsg !== undefined ? errorMsg : 'Please input all required fields!'}\n\t\t\t\t\t</MuiAlert>\n\t\t\t\t</Snackbar>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default SignUpForm;\n"]},"metadata":{},"sourceType":"module"}