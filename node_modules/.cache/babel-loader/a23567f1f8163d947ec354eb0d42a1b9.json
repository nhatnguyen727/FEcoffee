{"ast":null,"code":"var _jsxFileName = \"/home/nhatnt/TN/FEcoffee/src/components/app-context/OrderProvider.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useContext, createContext, useState, useMemo, useEffect } from 'react';\nimport { SERVER_URL } from '../../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderContext = /*#__PURE__*/createContext();\nexport const useOrders = () => {\n  _s();\n\n  return useContext(OrderContext);\n};\n\n_s(useOrders, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nfunction OrderProvider({\n  children\n}) {\n  _s2();\n\n  const [orders, setOrders] = useState([]);\n  const [errorMsg, setErrorMsg] = useState();\n  const [dataChanged, setDataChanged] = useState(true); // 'true' for first loading in 'useEffect'\n\n  const [orderLoading, setOrderLoading] = useState(true); // 'true' for first loading in 'useEffect'\n\n  const [sizes, setSizes] = useState([]);\n  const [toppings, setToppings] = useState([]); // first loading\n\n  useMemo(() => {\n    fetch(SERVER_URL + '/size').then(response => response.json()).then(setSizes).then(() => {\n      fetch(SERVER_URL + '/topping').then(response => response.json()).then(setToppings);\n    });\n  }, []);\n  useEffect(() => {\n    if (dataChanged) {\n      let token = sessionStorage.getItem('starbucks-admin-jwt');\n      fetch(SERVER_URL + `/admin/order`, {\n        headers: {\n          Authorization: token\n        }\n      }).then(response => response.json()).then(setOrders).then(() => setDataChanged(false)).then(() => setOrderLoading(false));\n    }\n  }, [dataChanged]);\n\n  const deleteOrders = async orders => {\n    const token = sessionStorage.getItem('starbucks-admin-jwt');\n    let urls = orders.map(o => SERVER_URL + `/admin/order/${o.id}`);\n    setOrderLoading(true);\n    await Promise.all(urls.map(url => fetch(url, {\n      method: 'DELETE',\n      headers: {\n        Authorization: token\n      }\n    })));\n    setDataChanged(true);\n  }; // no need adding order\n\n\n  const addOrder = () => {\n    return null;\n  };\n\n  const updateOrder = order => {\n    const token = sessionStorage.getItem('starbucks-admin-jwt');\n    setOrderLoading(true);\n    fetch(SERVER_URL + `/admin/order/${order.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: token\n      },\n      body: JSON.stringify(order)\n    }).then(response => {\n      // 403 forbidden (validation)\n      if (response.status === 403) {\n        return response.text();\n      }\n    }).then(setErrorMsg).then(() => setDataChanged(true));\n  };\n\n  const resetErrorMsg = () => {\n    setErrorMsg(); // set back to undefined (no errors)\n  };\n\n  return /*#__PURE__*/_jsxDEV(OrderContext.Provider, {\n    value: {\n      orders,\n      orderLoading,\n      deleteOrders,\n      addOrder,\n      updateOrder,\n      errorMsg,\n      resetErrorMsg,\n      sizes,\n      toppings\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 3\n  }, this);\n}\n\n_s2(OrderProvider, \"rw8qMlr+SN427PzfvXFHH5fEFGk=\");\n\n_c = OrderProvider;\nexport default OrderProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderProvider\");","map":{"version":3,"sources":["/home/nhatnt/TN/FEcoffee/src/components/app-context/OrderProvider.jsx"],"names":["useContext","createContext","useState","useMemo","useEffect","SERVER_URL","OrderContext","useOrders","OrderProvider","children","orders","setOrders","errorMsg","setErrorMsg","dataChanged","setDataChanged","orderLoading","setOrderLoading","sizes","setSizes","toppings","setToppings","fetch","then","response","json","token","sessionStorage","getItem","headers","Authorization","deleteOrders","urls","map","o","id","Promise","all","url","method","addOrder","updateOrder","order","body","JSON","stringify","status","text","resetErrorMsg"],"mappings":"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","sourcesContent":["import { useContext, createContext, useState, useMemo, useEffect } from 'react';\nimport { SERVER_URL } from '../../constants';\n\nconst OrderContext = createContext();\n\nexport const useOrders = () => useContext(OrderContext);\n\nfunction OrderProvider({ children }) {\n\tconst [orders, setOrders] = useState([]);\n\tconst [errorMsg, setErrorMsg] = useState();\n\tconst [dataChanged, setDataChanged] = useState(true); // 'true' for first loading in 'useEffect'\n\tconst [orderLoading, setOrderLoading] = useState(true); // 'true' for first loading in 'useEffect'\n\tconst [sizes, setSizes] = useState([]);\n\tconst [toppings, setToppings] = useState([]);\n\n\t// first loading\n\tuseMemo(() => {\n\t\tfetch(SERVER_URL + '/size')\n\t\t\t.then((response) => response.json())\n\t\t\t.then(setSizes)\n\t\t\t.then(() => {\n\t\t\t\tfetch(SERVER_URL + '/topping')\n\t\t\t\t\t.then((response) => response.json())\n\t\t\t\t\t.then(setToppings);\n\t\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (dataChanged) {\n\t\t\tlet token = sessionStorage.getItem('starbucks-admin-jwt');\n\t\t\tfetch(SERVER_URL + `/admin/order`, {\n\t\t\t\theaders: { Authorization: token },\n\t\t\t})\n\t\t\t\t.then((response) => response.json())\n\t\t\t\t.then(setOrders)\n\t\t\t\t.then(() => setDataChanged(false))\n\t\t\t\t.then(() => setOrderLoading(false));\n\t\t}\n\t}, [dataChanged]);\n\n\tconst deleteOrders = async (orders) => {\n\t\tconst token = sessionStorage.getItem('starbucks-admin-jwt');\n\t\tlet urls = orders.map((o) => SERVER_URL + `/admin/order/${o.id}`);\n\t\tsetOrderLoading(true);\n\t\tawait Promise.all(\n\t\t\turls.map((url) =>\n\t\t\t\tfetch(url, {\n\t\t\t\t\tmethod: 'DELETE',\n\t\t\t\t\theaders: { Authorization: token },\n\t\t\t\t})\n\t\t\t)\n\t\t);\n\t\tsetDataChanged(true);\n\t};\n\n\t// no need adding order\n\tconst addOrder = () => {\n\t\treturn null;\n\t};\n\n\tconst updateOrder = (order) => {\n\t\tconst token = sessionStorage.getItem('starbucks-admin-jwt');\n\t\tsetOrderLoading(true);\n\t\tfetch(SERVER_URL + `/admin/order/${order.id}`, {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: token,\n\t\t\t},\n\t\t\tbody: JSON.stringify(order),\n\t\t})\n\t\t\t.then((response) => {\n\t\t\t\t// 403 forbidden (validation)\n\t\t\t\tif (response.status === 403) {\n\t\t\t\t\treturn response.text();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(setErrorMsg)\n\t\t\t.then(() => setDataChanged(true));\n\t};\n\n\tconst resetErrorMsg = () => {\n\t\tsetErrorMsg(); // set back to undefined (no errors)\n\t};\n\n\treturn (\n\t\t<OrderContext.Provider value={{ orders, orderLoading, deleteOrders, addOrder, updateOrder, errorMsg, resetErrorMsg, sizes, toppings }}>\n\t\t\t{children}\n\t\t</OrderContext.Provider>\n\t);\n}\n\nexport default OrderProvider;\n"]},"metadata":{},"sourceType":"module"}