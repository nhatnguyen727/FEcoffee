{"ast":null,"code":"var _jsxFileName = \"/home/nhatnt/TN/FEcoffee/src/components/coupons/CouponFieldsTableCell.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { TextField, Grid, IconButton } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport SaveRoundedIcon from '@material-ui/icons/SaveRounded';\nimport { useCoupons } from '../app-context/CouponProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CouponFieldsTableCell({\n  columnId,\n  inputStyle,\n  value,\n  onChange = f => f,\n  onBlur = f => f\n}) {\n  _s();\n\n  const {\n    products\n  } = useCoupons();\n  const statusOptions = React.useMemo(() => ['ON', 'OFF'], []);\n\n  if (columnId === 'discount') {\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      min: \"0\",\n      step: \"1\",\n      style: { ...inputStyle,\n        width: 100\n      },\n      value: value,\n      onChange: onChange,\n      onBlur: onBlur\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 10\n    }, this);\n  }\n\n  if (columnId === 'products') {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      style: {\n        width: 360\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 10,\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          multiple: true,\n          size: \"small\",\n          options: products,\n          groupBy: p => p.category.name,\n          getOptionLabel: option => option.name,\n          value: products.filter(option => value.some(p => option.id === p.id)) // value is selected products\n          ,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            variant: \"outlined\",\n            label: \"Products\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 32\n          }, this),\n          onChange: (event, newValue) => onChange(newValue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        sm: 2,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: onBlur,\n          title: \"Save applied products\",\n          children: /*#__PURE__*/_jsxDEV(SaveRoundedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this);\n  }\n\n  if (columnId === 'activated') {\n    return /*#__PURE__*/_jsxDEV(Autocomplete, {\n      options: statusOptions,\n      style: {\n        width: 80,\n        margin: 0,\n        padding: 0\n      },\n      size: \"small\",\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n        onBlur: onBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 30\n      }, this),\n      value: statusOptions[statusOptions.indexOf(value === true ? 'ON' : 'OFF')],\n      getOptionLabel: value => value,\n      onChange: (event, newValue) => onChange(newValue === 'ON' ? true : false),\n      disableClearable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    style: { ...inputStyle,\n      width: '120px'\n    },\n    value: value,\n    onChange: onChange,\n    onBlur: onBlur\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CouponFieldsTableCell, \"Otti9cUe4+N4vWCozN3vk1wdBeY=\", false, function () {\n  return [useCoupons];\n});\n\n_c = CouponFieldsTableCell;\nexport default CouponFieldsTableCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"CouponFieldsTableCell\");","map":{"version":3,"sources":["/home/nhatnt/TN/FEcoffee/src/components/coupons/CouponFieldsTableCell.jsx"],"names":["React","TextField","Grid","IconButton","Autocomplete","SaveRoundedIcon","useCoupons","CouponFieldsTableCell","columnId","inputStyle","value","onChange","f","onBlur","products","statusOptions","useMemo","width","p","category","name","option","filter","some","id","params","event","newValue","margin","padding","indexOf"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { TextField, Grid, IconButton } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport SaveRoundedIcon from '@material-ui/icons/SaveRounded';\nimport { useCoupons } from '../app-context/CouponProvider';\n\nfunction CouponFieldsTableCell({ columnId, inputStyle, value, onChange = (f) => f, onBlur = (f) => f }) {\n\tconst { products } = useCoupons();\n\n\tconst statusOptions = React.useMemo(() => ['ON', 'OFF'], []);\n\n\tif (columnId === 'discount') {\n\t\treturn <input type='number' min='0' step='1' style={{ ...inputStyle, width: 100 }} value={value} onChange={onChange} onBlur={onBlur} />;\n\t}\n\tif (columnId === 'products') {\n\t\treturn (\n\t\t\t<Grid container style={{ width: 360 }}>\n\t\t\t\t<Grid item xs={12} sm={10}>\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tmultiple\n\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\toptions={products}\n\t\t\t\t\t\tgroupBy={(p) => p.category.name}\n\t\t\t\t\t\tgetOptionLabel={(option) => option.name}\n\t\t\t\t\t\tvalue={products.filter((option) => value.some((p) => option.id === p.id))} // value is selected products\n\t\t\t\t\t\trenderInput={(params) => <TextField {...params} variant='outlined' label='Products' />}\n\t\t\t\t\t\tonChange={(event, newValue) => onChange(newValue)}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={2} sm={2}>\n\t\t\t\t\t<IconButton onClick={onBlur} title='Save applied products'>\n\t\t\t\t\t\t<SaveRoundedIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t);\n\t}\n\tif (columnId === 'activated') {\n\t\treturn (\n\t\t\t<Autocomplete\n\t\t\t\toptions={statusOptions}\n\t\t\t\tstyle={{ width: 80, margin: 0, padding: 0 }}\n\t\t\t\tsize='small'\n\t\t\t\trenderInput={(params) => <TextField {...params} onBlur={onBlur} />}\n\t\t\t\tvalue={statusOptions[statusOptions.indexOf(value === true ? 'ON' : 'OFF')]}\n\t\t\t\tgetOptionLabel={(value) => value}\n\t\t\t\tonChange={(event, newValue) => onChange(newValue === 'ON' ? true : false)}\n\t\t\t\tdisableClearable\n\t\t\t/>\n\t\t);\n\t}\n\treturn <input style={{ ...inputStyle, width: '120px' }} value={value} onChange={onChange} onBlur={onBlur} />;\n}\n\nexport default CouponFieldsTableCell;\n"]},"metadata":{},"sourceType":"module"}