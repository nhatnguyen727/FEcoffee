{"ast":null,"code":"var _jsxFileName = \"/home/nhatnt/TN/FEcoffee/src/components/app-context/ProductProvider.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useContext, createContext, useState, useMemo, useEffect } from 'react';\nimport { SERVER_URL } from '../../constants';\nimport { useUsers } from './UserProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductContext = /*#__PURE__*/createContext();\nexport const useProducts = () => {\n  _s();\n\n  return useContext(ProductContext);\n};\n\n_s(useProducts, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nfunction ProductProvider({\n  children\n}) {\n  _s2();\n\n  const {\n    selectedMenuClick\n  } = useUsers();\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState();\n  const [groupCategories, setGroupCategories] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [errorMsg, setErrorMsg] = useState();\n  const [dataChanged, setDataChanged] = useState(false);\n  const [productLoading, setProductLoading] = useState(false);\n  const [categoryLoading, setCategoryLoading] = useState(false);\n  const [sizes, setSizes] = useState([]);\n  const [toppings, setToppings] = useState([]);\n\n  const getSelectedCategory = id => {\n    setSelectedCategory(id);\n    setProductLoading(true);\n    setDataChanged(true);\n  }; // first loading\n\n\n  useMemo(() => {\n    setCategoryLoading(true);\n    fetch(SERVER_URL + '/category').then(response => response.json()).then(async result => {\n      let categories = await result.map(category => {\n        return {\n          group: category.id < 7 ? 'Beverages' : 'Foods',\n          ...category\n        };\n      });\n      setCategories(categories);\n\n      if (selectedMenuClick === 'beverages') {\n        let group = result.filter(category => category.id < 7);\n        setGroupCategories(group);\n        setSelectedCategory(group[0].id);\n      }\n\n      if (selectedMenuClick === 'foods') {\n        let group = result.filter(category => category.id >= 7);\n        setGroupCategories(group);\n        setSelectedCategory(group[0].id);\n      }\n    }).then(() => {\n      fetch(SERVER_URL + '/size').then(response => response.json()).then(setSizes);\n    }).then(() => {\n      fetch(SERVER_URL + '/topping').then(response => response.json()).then(setToppings);\n    }).then(() => setCategoryLoading(false)).then(() => setDataChanged(true)).then(() => setProductLoading(true));\n  }, [selectedMenuClick]);\n  useEffect(() => {\n    if (dataChanged) {\n      fetch(SERVER_URL + `/product/category=${selectedCategory}`).then(response => response.json()).then(setProducts).then(() => setDataChanged(false)).then(() => setProductLoading(false));\n    }\n  }, [selectedCategory, dataChanged]);\n\n  const deleteProducts = async products => {\n    let token = sessionStorage.getItem('starbucks-admin-jwt');\n    let urls = products.map(p => SERVER_URL + `/admin/product/${p.id}`);\n    setProductLoading(true);\n    await Promise.all(urls.map(url => fetch(url, {\n      method: 'DELETE',\n      headers: {\n        Authorization: token\n      }\n    })));\n    setDataChanged(true);\n  };\n\n  const addProduct = product => {\n    let token = sessionStorage.getItem('starbucks-admin-jwt');\n    setProductLoading(true);\n    fetch(SERVER_URL + '/admin/product', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: token\n      },\n      body: JSON.stringify(product)\n    }).then(response => {\n      if (response.status === 409) {\n        return response.text();\n      }\n    }).then(setErrorMsg).then(() => setDataChanged(true));\n  };\n\n  const updateProduct = product => {\n    let token = sessionStorage.getItem('starbucks-admin-jwt');\n    setProductLoading(true);\n    fetch(SERVER_URL + `/admin/product/${product.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: token\n      },\n      body: JSON.stringify(product)\n    }).then(response => {\n      // 403 forbidden (validation); 409 conflict (unique)\n      if (response.status === 403 || response.status === 409) {\n        return response.text();\n      }\n    }).then(setErrorMsg).then(() => setDataChanged(true));\n  };\n\n  const resetErrorMsg = () => {\n    setErrorMsg(); // set back to undefined (no errors)\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n    value: {\n      products,\n      productLoading,\n      categoryLoading,\n      deleteProducts,\n      addProduct,\n      updateProduct,\n      errorMsg,\n      resetErrorMsg,\n      categories,\n      groupCategories,\n      selectedCategory,\n      getSelectedCategory,\n      sizes,\n      toppings\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 3\n  }, this);\n}\n\n_s2(ProductProvider, \"FXh+DP3KEs4wtZrMnP+r54U5j10=\", false, function () {\n  return [useUsers];\n});\n\n_c = ProductProvider;\nexport default ProductProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductProvider\");","map":{"version":3,"sources":["/home/nhatnt/TN/FEcoffee/src/components/app-context/ProductProvider.jsx"],"names":["useContext","createContext","useState","useMemo","useEffect","SERVER_URL","useUsers","ProductContext","useProducts","ProductProvider","children","selectedMenuClick","categories","setCategories","selectedCategory","setSelectedCategory","groupCategories","setGroupCategories","products","setProducts","errorMsg","setErrorMsg","dataChanged","setDataChanged","productLoading","setProductLoading","categoryLoading","setCategoryLoading","sizes","setSizes","toppings","setToppings","getSelectedCategory","id","fetch","then","response","json","result","map","category","group","filter","deleteProducts","token","sessionStorage","getItem","urls","p","Promise","all","url","method","headers","Authorization","addProduct","product","body","JSON","stringify","status","text","updateProduct","resetErrorMsg"],"mappings":"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","sourcesContent":["import { useContext, createContext, useState, useMemo, useEffect } from 'react';\nimport { SERVER_URL } from '../../constants';\nimport { useUsers } from './UserProvider';\n\nconst ProductContext = createContext();\n\nexport const useProducts = () => useContext(ProductContext);\n\nfunction ProductProvider({ children }) {\n\tconst { selectedMenuClick } = useUsers();\n\tconst [categories, setCategories] = useState([]);\n\tconst [selectedCategory, setSelectedCategory] = useState();\n\tconst [groupCategories, setGroupCategories] = useState([]);\n\tconst [products, setProducts] = useState([]);\n\tconst [errorMsg, setErrorMsg] = useState();\n\tconst [dataChanged, setDataChanged] = useState(false);\n\tconst [productLoading, setProductLoading] = useState(false);\n\tconst [categoryLoading, setCategoryLoading] = useState(false);\n\tconst [sizes, setSizes] = useState([]);\n\tconst [toppings, setToppings] = useState([]);\n\n\tconst getSelectedCategory = (id) => {\n\t\tsetSelectedCategory(id);\n\t\tsetProductLoading(true);\n\t\tsetDataChanged(true);\n\t};\n\n\t// first loading\n\tuseMemo(() => {\n\t\tsetCategoryLoading(true);\n\t\tfetch(SERVER_URL + '/category')\n\t\t\t.then((response) => response.json())\n\t\t\t.then(async (result) => {\n\t\t\t\tlet categories = await result.map((category) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tgroup: category.id < 7 ? 'Beverages' : 'Foods',\n\t\t\t\t\t\t...category,\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsetCategories(categories);\n\t\t\t\tif (selectedMenuClick === 'beverages') {\n\t\t\t\t\tlet group = result.filter((category) => category.id < 7);\n\t\t\t\t\tsetGroupCategories(group);\n\t\t\t\t\tsetSelectedCategory(group[0].id);\n\t\t\t\t}\n\t\t\t\tif (selectedMenuClick === 'foods') {\n\t\t\t\t\tlet group = result.filter((category) => category.id >= 7);\n\t\t\t\t\tsetGroupCategories(group);\n\t\t\t\t\tsetSelectedCategory(group[0].id);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tfetch(SERVER_URL + '/size')\n\t\t\t\t\t.then((response) => response.json())\n\t\t\t\t\t.then(setSizes);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tfetch(SERVER_URL + '/topping')\n\t\t\t\t\t.then((response) => response.json())\n\t\t\t\t\t.then(setToppings);\n\t\t\t})\n\t\t\t.then(() => setCategoryLoading(false))\n\t\t\t.then(() => setDataChanged(true))\n\t\t\t.then(() => setProductLoading(true));\n\t}, [selectedMenuClick]);\n\n\tuseEffect(() => {\n\t\tif (dataChanged) {\n\t\t\tfetch(SERVER_URL + `/product/category=${selectedCategory}`)\n\t\t\t\t.then((response) => response.json())\n\t\t\t\t.then(setProducts)\n\t\t\t\t.then(() => setDataChanged(false))\n\t\t\t\t.then(() => setProductLoading(false));\n\t\t}\n\t}, [selectedCategory, dataChanged]);\n\n\tconst deleteProducts = async (products) => {\n\t\tlet token = sessionStorage.getItem('starbucks-admin-jwt');\n\t\tlet urls = products.map((p) => SERVER_URL + `/admin/product/${p.id}`);\n\t\tsetProductLoading(true);\n\t\tawait Promise.all(\n\t\t\turls.map((url) =>\n\t\t\t\tfetch(url, {\n\t\t\t\t\tmethod: 'DELETE',\n\t\t\t\t\theaders: { Authorization: token },\n\t\t\t\t})\n\t\t\t)\n\t\t);\n\t\tsetDataChanged(true);\n\t};\n\n\tconst addProduct = (product) => {\n\t\tlet token = sessionStorage.getItem('starbucks-admin-jwt');\n\t\tsetProductLoading(true);\n\t\tfetch(SERVER_URL + '/admin/product', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: token,\n\t\t\t},\n\t\t\tbody: JSON.stringify(product),\n\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tif (response.status === 409) {\n\t\t\t\t\treturn response.text();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(setErrorMsg)\n\t\t\t.then(() => setDataChanged(true));\n\t};\n\n\tconst updateProduct = (product) => {\n\t\tlet token = sessionStorage.getItem('starbucks-admin-jwt');\n\t\tsetProductLoading(true);\n\t\tfetch(SERVER_URL + `/admin/product/${product.id}`, {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: token,\n\t\t\t},\n\t\t\tbody: JSON.stringify(product),\n\t\t})\n\t\t\t.then((response) => {\n\t\t\t\t// 403 forbidden (validation); 409 conflict (unique)\n\t\t\t\tif (response.status === 403 || response.status === 409) {\n\t\t\t\t\treturn response.text();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(setErrorMsg)\n\t\t\t.then(() => setDataChanged(true));\n\t};\n\n\tconst resetErrorMsg = () => {\n\t\tsetErrorMsg(); // set back to undefined (no errors)\n\t};\n\n\treturn (\n\t\t<ProductContext.Provider\n\t\t\tvalue={{\n\t\t\t\tproducts,\n\t\t\t\tproductLoading,\n\t\t\t\tcategoryLoading,\n\t\t\t\tdeleteProducts,\n\t\t\t\taddProduct,\n\t\t\t\tupdateProduct,\n\t\t\t\terrorMsg,\n\t\t\t\tresetErrorMsg,\n\t\t\t\tcategories,\n\t\t\t\tgroupCategories,\n\t\t\t\tselectedCategory,\n\t\t\t\tgetSelectedCategory,\n\t\t\t\tsizes,\n\t\t\t\ttoppings,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</ProductContext.Provider>\n\t);\n}\n\nexport default ProductProvider;\n"]},"metadata":{},"sourceType":"module"}