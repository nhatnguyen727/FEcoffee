{"ast":null,"code":"var _jsxFileName = \"/home/nhatnt/TN/FEcoffee/src/components/app-context/CouponProvider.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useContext, createContext, useState, useMemo, useEffect } from 'react';\nimport { SERVER_URL } from '../../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CouponContext = /*#__PURE__*/createContext();\nexport const useCoupons = () => {\n  _s();\n\n  return useContext(CouponContext);\n};\n\n_s(useCoupons, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nfunction CouponProvider({\n  children\n}) {\n  _s2();\n\n  const [coupons, setCoupons] = useState([]);\n  const [products, setProducts] = useState();\n  const [errorMsg, setErrorMsg] = useState();\n  const [dataChanged, setDataChanged] = useState(false); // 'true' for first loading in 'useEffect'\n\n  const [couponLoading, setCouponLoading] = useState(false); // 'true' for first loading in 'useEffect'\n  // this promise loads all products for selecting, it will take longer waiting than others\n\n  useMemo(() => {\n    setCouponLoading(true);\n    fetch(SERVER_URL + `/product`).then(response => response.json()).then(setProducts).then(() => fetch(SERVER_URL + `/coupon`).then(response => response.json()).then(setCoupons).then(() => setCouponLoading(false)));\n  }, []);\n  useEffect(() => {\n    if (dataChanged) {\n      fetch(SERVER_URL + `/coupon`).then(response => response.json()).then(setCoupons).then(() => setDataChanged(false)).then(() => setCouponLoading(false));\n    }\n  }, [dataChanged]);\n\n  const deleteCoupons = async coupons => {\n    const token = sessionStorage.getItem('starbucks-admin-jwt');\n    let urls = coupons.map(o => SERVER_URL + `/admin/coupon/${o.id}`);\n    setCouponLoading(true);\n    await Promise.all(urls.map(url => fetch(url, {\n      method: 'DELETE',\n      headers: {\n        Authorization: token\n      }\n    })));\n    setDataChanged(true);\n  }; // no need adding coupon\n\n\n  const addCoupon = coupon => {\n    let token = sessionStorage.getItem('starbucks-admin-jwt');\n    setCouponLoading(true);\n    fetch(SERVER_URL + '/admin/coupon', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: token\n      },\n      body: JSON.stringify(coupon)\n    }).then(response => {\n      if (response.status === 409) {\n        return response.text();\n      }\n    }).then(setErrorMsg).then(() => setDataChanged(true));\n  };\n\n  const updateCoupon = coupon => {\n    const token = sessionStorage.getItem('starbucks-admin-jwt');\n    setCouponLoading(true);\n    fetch(SERVER_URL + `/admin/coupon/${coupon.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: token\n      },\n      body: JSON.stringify(coupon)\n    }).then(response => {\n      // 403 forbidden (validation)\n      if (response.status === 403 || response.status === 409) {\n        return response.text();\n      }\n    }).then(setErrorMsg).then(() => setDataChanged(true));\n  };\n\n  const resetErrorMsg = () => {\n    setErrorMsg(); // set back to undefined (no errors)\n  };\n\n  return /*#__PURE__*/_jsxDEV(CouponContext.Provider, {\n    value: {\n      coupons,\n      products,\n      couponLoading,\n      deleteCoupons,\n      addCoupon,\n      updateCoupon,\n      errorMsg,\n      resetErrorMsg\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 3\n  }, this);\n}\n\n_s2(CouponProvider, \"4zOlsxVP9SSABXJ7QPbaJT3hP/M=\");\n\n_c = CouponProvider;\nexport default CouponProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CouponProvider\");","map":{"version":3,"sources":["/home/nhatnt/TN/FEcoffee/src/components/app-context/CouponProvider.jsx"],"names":["useContext","createContext","useState","useMemo","useEffect","SERVER_URL","CouponContext","useCoupons","CouponProvider","children","coupons","setCoupons","products","setProducts","errorMsg","setErrorMsg","dataChanged","setDataChanged","couponLoading","setCouponLoading","fetch","then","response","json","deleteCoupons","token","sessionStorage","getItem","urls","map","o","id","Promise","all","url","method","headers","Authorization","addCoupon","coupon","body","JSON","stringify","status","text","updateCoupon","resetErrorMsg"],"mappings":"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","sourcesContent":["import { useContext, createContext, useState, useMemo, useEffect } from 'react';\nimport { SERVER_URL } from '../../constants';\n\nconst CouponContext = createContext();\n\nexport const useCoupons = () => useContext(CouponContext);\n\nfunction CouponProvider({ children }) {\n\tconst [coupons, setCoupons] = useState([]);\n\tconst [products, setProducts] = useState();\n\tconst [errorMsg, setErrorMsg] = useState();\n\tconst [dataChanged, setDataChanged] = useState(false); // 'true' for first loading in 'useEffect'\n\tconst [couponLoading, setCouponLoading] = useState(false); // 'true' for first loading in 'useEffect'\n\n\t// this promise loads all products for selecting, it will take longer waiting than others\n\tuseMemo(() => {\n\t\tsetCouponLoading(true);\n\t\tfetch(SERVER_URL + `/product`)\n\t\t\t.then((response) => response.json())\n\t\t\t.then(setProducts)\n\t\t\t.then(() =>\n\t\t\t\tfetch(SERVER_URL + `/coupon`)\n\t\t\t\t\t.then((response) => response.json())\n\t\t\t\t\t.then(setCoupons)\n\t\t\t\t\t.then(() => setCouponLoading(false))\n\t\t\t);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (dataChanged) {\n\t\t\tfetch(SERVER_URL + `/coupon`)\n\t\t\t\t.then((response) => response.json())\n\t\t\t\t.then(setCoupons)\n\t\t\t\t.then(() => setDataChanged(false))\n\t\t\t\t.then(() => setCouponLoading(false));\n\t\t}\n\t}, [dataChanged]);\n\n\tconst deleteCoupons = async (coupons) => {\n\t\tconst token = sessionStorage.getItem('starbucks-admin-jwt');\n\t\tlet urls = coupons.map((o) => SERVER_URL + `/admin/coupon/${o.id}`);\n\t\tsetCouponLoading(true);\n\t\tawait Promise.all(\n\t\t\turls.map((url) =>\n\t\t\t\tfetch(url, {\n\t\t\t\t\tmethod: 'DELETE',\n\t\t\t\t\theaders: { Authorization: token },\n\t\t\t\t})\n\t\t\t)\n\t\t);\n\t\tsetDataChanged(true);\n\t};\n\n\t// no need adding coupon\n\tconst addCoupon = (coupon) => {\n\t\tlet token = sessionStorage.getItem('starbucks-admin-jwt');\n\t\tsetCouponLoading(true);\n\t\tfetch(SERVER_URL + '/admin/coupon', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: token,\n\t\t\t},\n\t\t\tbody: JSON.stringify(coupon),\n\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tif (response.status === 409) {\n\t\t\t\t\treturn response.text();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(setErrorMsg)\n\t\t\t.then(() => setDataChanged(true));\n\t};\n\n\tconst updateCoupon = (coupon) => {\n\t\tconst token = sessionStorage.getItem('starbucks-admin-jwt');\n\t\tsetCouponLoading(true);\n\t\tfetch(SERVER_URL + `/admin/coupon/${coupon.id}`, {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: token,\n\t\t\t},\n\t\t\tbody: JSON.stringify(coupon),\n\t\t})\n\t\t\t.then((response) => {\n\t\t\t\t// 403 forbidden (validation)\n\t\t\t\tif (response.status === 403 || response.status === 409) {\n\t\t\t\t\treturn response.text();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(setErrorMsg)\n\t\t\t.then(() => setDataChanged(true));\n\t};\n\n\tconst resetErrorMsg = () => {\n\t\tsetErrorMsg(); // set back to undefined (no errors)\n\t};\n\n\treturn (\n\t\t<CouponContext.Provider value={{ coupons, products, couponLoading, deleteCoupons, addCoupon, updateCoupon, errorMsg, resetErrorMsg }}>\n\t\t\t{children}\n\t\t</CouponContext.Provider>\n\t);\n}\n\nexport default CouponProvider;\n"]},"metadata":{},"sourceType":"module"}