{"ast":null,"code":"import \"antd/lib/spin/style\";\nimport _Spin from \"antd/lib/spin\";\nimport \"antd/lib/radio/style\";\nimport _Radio from \"antd/lib/radio\";\nimport \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\n\nvar _jsxFileName = \"/home/nhatnt/TN/FEcoffee/src/components/products/Products.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { CssBaseline } from '@material-ui/core';\nimport EnhancedTable from '../react-table/EnhancedTable';\nimport AddProductDialog from './AddProductDialog';\nimport ProductFieldsTableCell from './ProductFieldsTableCell';\nimport SubProduct from './SubProduct';\nimport { useProducts } from '../app-context/ProductProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Content\n} = _Layout;\n\nfunction Products() {\n  _s();\n\n  const {\n    products,\n    deleteProducts,\n    addProduct,\n    updateProduct,\n    productLoading,\n    categoryLoading,\n    errorMsg,\n    resetErrorMsg,\n    groupCategories,\n    getSelectedCategory\n  } = useProducts();\n  const [selectedRdBtn, setSelectedRdBtn] = React.useState(''); // for adding new product\n\n  const initProduct = React.useMemo(() => {\n    return {\n      name: '',\n      price: 0,\n      image: '',\n      description: '',\n      category: ''\n    };\n  }, []);\n  const columns = React.useMemo(() => [{\n    Header: () => null,\n    id: 'expander',\n    // Use Cell to render an expander for each row.\n    // We can use the getToggleRowExpandedProps prop-getter to build the expander.\n    Cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"span\", { ...row.getToggleRowExpandedProps(),\n      children: row.isExpanded ? 'ðŸ‘‡' : 'ðŸ‘‰'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 24\n    }, this),\n    SubCell: () => null\n  }, {\n    Header: 'Image',\n    accessor: 'image'\n  }, {\n    Header: 'Name',\n    accessor: 'name'\n  }, {\n    Header: 'Description',\n    accessor: 'description'\n  }, {\n    Header: 'Price$',\n    accessor: 'price'\n  }, {\n    Header: 'Category',\n    accessor: 'category'\n  }], []);\n  const data = React.useMemo(() => {\n    return products.map(p => ({\n      id: p.id,\n      image: p.image,\n      name: p.name,\n      description: p.description,\n      price: p.price,\n      category: p.category,\n      sizes: p.sizes,\n      toppings: p.toppings\n    }));\n  }, [products]);\n\n  const productFieldsForm = (record, handleChange = f => f, setErrors = f => f) => {\n    return /*#__PURE__*/_jsxDEV(AddProductDialog, {\n      record: record,\n      handleChange: handleChange,\n      setErrors: setErrors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 10\n    }, this);\n  };\n\n  const productFieldsTableCell = (columnId, inputStyle, value, onChange = f => f, onBlur = f => f, imgDlgOpen, handleImgDlgOpen = f => f, handleImgDlgClose = f => f) => {\n    return /*#__PURE__*/_jsxDEV(ProductFieldsTableCell, {\n      columnId: columnId,\n      inputStyle: inputStyle,\n      value: value,\n      onChange: onChange,\n      onBlur: onBlur,\n      dlgOpen: imgDlgOpen,\n      handleDlgOpen: handleImgDlgOpen,\n      handleDlgClose: handleImgDlgClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, this);\n  };\n\n  const ProductSubRow = props => {\n    return /*#__PURE__*/_jsxDEV(SubProduct, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 10\n    }, this);\n  };\n\n  React.useMemo(() => {\n    if (groupCategories.length !== 0) {\n      setSelectedRdBtn(groupCategories[0].name);\n    }\n  }, [groupCategories]);\n\n  const handleCategorySelect = (id, name) => {\n    getSelectedCategory(id);\n    setSelectedRdBtn(name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '16px',\n        padding: 24,\n        background: '#fff'\n      },\n      children: /*#__PURE__*/_jsxDEV(_Spin, {\n        spinning: categoryLoading,\n        children: groupCategories.length !== 0 ? /*#__PURE__*/_jsxDEV(_Radio.Group, {\n          value: selectedRdBtn,\n          buttonStyle: \"solid\",\n          children: groupCategories.map(category => /*#__PURE__*/_jsxDEV(_Radio.Button, {\n            value: category.name,\n            type: \"dashed\",\n            style: {\n              marginRight: '8px',\n              marginBottom: '4px'\n            },\n            onClick: () => handleCategorySelect(category.id, category.name),\n            children: category.name\n          }, category.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 9\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 7\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      style: {\n        margin: '0 16px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 24,\n          background: '#fff',\n          minHeight: 360\n        },\n        children: /*#__PURE__*/_jsxDEV(_Spin, {\n          spinning: productLoading,\n          children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(EnhancedTable, {\n            columns: columns,\n            data: data,\n            initialRecord: initProduct,\n            fieldsForm: productFieldsForm,\n            fieldsTableCell: productFieldsTableCell,\n            deleteRecordInDB: deleteProducts,\n            addRecordInDB: addProduct,\n            updateRecordInDB: updateProduct,\n            errorMsg: errorMsg,\n            resetErrorMsg: resetErrorMsg,\n            tableName: \"Products\",\n            makeSubRow: ProductSubRow\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Products, \"BBHxMSONHSwRlmeFhZdbTc/9VoY=\", false, function () {\n  return [useProducts];\n});\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/home/nhatnt/TN/FEcoffee/src/components/products/Products.jsx"],"names":["React","CssBaseline","EnhancedTable","AddProductDialog","ProductFieldsTableCell","SubProduct","useProducts","Content","Products","products","deleteProducts","addProduct","updateProduct","productLoading","categoryLoading","errorMsg","resetErrorMsg","groupCategories","getSelectedCategory","selectedRdBtn","setSelectedRdBtn","useState","initProduct","useMemo","name","price","image","description","category","columns","Header","id","Cell","row","getToggleRowExpandedProps","isExpanded","SubCell","accessor","data","map","p","sizes","toppings","productFieldsForm","record","handleChange","f","setErrors","productFieldsTableCell","columnId","inputStyle","value","onChange","onBlur","imgDlgOpen","handleImgDlgOpen","handleImgDlgClose","ProductSubRow","props","length","handleCategorySelect","margin","padding","background","marginRight","marginBottom","minHeight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Layout, Radio, Spin } from 'antd';\nimport { CssBaseline } from '@material-ui/core';\nimport EnhancedTable from '../react-table/EnhancedTable';\nimport AddProductDialog from './AddProductDialog';\nimport ProductFieldsTableCell from './ProductFieldsTableCell';\nimport SubProduct from './SubProduct';\nimport { useProducts } from '../app-context/ProductProvider';\n\nconst { Content } = Layout;\n\nfunction Products() {\n\tconst {\n\t\tproducts,\n\t\tdeleteProducts,\n\t\taddProduct,\n\t\tupdateProduct,\n\t\tproductLoading,\n\t\tcategoryLoading,\n\t\terrorMsg,\n\t\tresetErrorMsg,\n\t\tgroupCategories,\n\t\tgetSelectedCategory,\n\t} = useProducts();\n\tconst [selectedRdBtn, setSelectedRdBtn] = React.useState('');\n\n\t// for adding new product\n\tconst initProduct = React.useMemo(() => {\n\t\treturn {\n\t\t\tname: '',\n\t\t\tprice: 0,\n\t\t\timage: '',\n\t\t\tdescription: '',\n\t\t\tcategory: '',\n\t\t};\n\t}, []);\n\n\tconst columns = React.useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\tHeader: () => null,\n\t\t\t\tid: 'expander',\n\t\t\t\t// Use Cell to render an expander for each row.\n\t\t\t\t// We can use the getToggleRowExpandedProps prop-getter to build the expander.\n\t\t\t\tCell: ({ row }) => <span {...row.getToggleRowExpandedProps()}>{row.isExpanded ? 'ðŸ‘‡' : 'ðŸ‘‰'}</span>,\n\t\t\t\tSubCell: () => null,\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: 'Image',\n\t\t\t\taccessor: 'image',\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: 'Name',\n\t\t\t\taccessor: 'name',\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: 'Description',\n\t\t\t\taccessor: 'description',\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: 'Price$',\n\t\t\t\taccessor: 'price',\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: 'Category',\n\t\t\t\taccessor: 'category',\n\t\t\t},\n\t\t],\n\t\t[]\n\t);\n\n\tconst data = React.useMemo(() => {\n\t\treturn products.map((p) => ({\n\t\t\tid: p.id,\n\t\t\timage: p.image,\n\t\t\tname: p.name,\n\t\t\tdescription: p.description,\n\t\t\tprice: p.price,\n\t\t\tcategory: p.category,\n\t\t\tsizes: p.sizes,\n\t\t\ttoppings: p.toppings,\n\t\t}));\n\t}, [products]);\n\n\tconst productFieldsForm = (record, handleChange = (f) => f, setErrors = (f) => f) => {\n\t\treturn <AddProductDialog record={record} handleChange={handleChange} setErrors={setErrors} />;\n\t};\n\n\tconst productFieldsTableCell = (\n\t\tcolumnId,\n\t\tinputStyle,\n\t\tvalue,\n\t\tonChange = (f) => f,\n\t\tonBlur = (f) => f,\n\t\timgDlgOpen,\n\t\thandleImgDlgOpen = (f) => f,\n\t\thandleImgDlgClose = (f) => f\n\t) => {\n\t\treturn (\n\t\t\t<ProductFieldsTableCell\n\t\t\t\tcolumnId={columnId}\n\t\t\t\tinputStyle={inputStyle}\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={onChange}\n\t\t\t\tonBlur={onBlur}\n\t\t\t\tdlgOpen={imgDlgOpen}\n\t\t\t\thandleDlgOpen={handleImgDlgOpen}\n\t\t\t\thandleDlgClose={handleImgDlgClose}\n\t\t\t/>\n\t\t);\n\t};\n\n\tconst ProductSubRow = (props) => {\n\t\treturn <SubProduct {...props} />;\n\t};\n\n\tReact.useMemo(() => {\n\t\tif (groupCategories.length !== 0) {\n\t\t\tsetSelectedRdBtn(groupCategories[0].name);\n\t\t}\n\t}, [groupCategories]);\n\n\tconst handleCategorySelect = (id, name) => {\n\t\tgetSelectedCategory(id);\n\t\tsetSelectedRdBtn(name);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div style={{ margin: '16px', padding: 24, background: '#fff' }}>\n\t\t\t\t<Spin spinning={categoryLoading}>\n\t\t\t\t\t{groupCategories.length !== 0 ? (\n\t\t\t\t\t\t<Radio.Group value={selectedRdBtn} buttonStyle='solid'>\n\t\t\t\t\t\t\t{groupCategories.map((category) => (\n\t\t\t\t\t\t\t\t<Radio.Button\n\t\t\t\t\t\t\t\t\tkey={category.id}\n\t\t\t\t\t\t\t\t\tvalue={category.name}\n\t\t\t\t\t\t\t\t\ttype='dashed'\n\t\t\t\t\t\t\t\t\tstyle={{ marginRight: '8px', marginBottom: '4px' }}\n\t\t\t\t\t\t\t\t\tonClick={() => handleCategorySelect(category.id, category.name)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{category.name}\n\t\t\t\t\t\t\t\t</Radio.Button>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Radio.Group>\n\t\t\t\t\t) : null}\n\t\t\t\t</Spin>\n\t\t\t</div>\n\t\t\t<Content style={{ margin: '0 16px' }}>\n\t\t\t\t<div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n\t\t\t\t\t<Spin spinning={productLoading}>\n\t\t\t\t\t\t<CssBaseline />\n\t\t\t\t\t\t<EnhancedTable\n\t\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\t\tinitialRecord={initProduct}\n\t\t\t\t\t\t\tfieldsForm={productFieldsForm}\n\t\t\t\t\t\t\tfieldsTableCell={productFieldsTableCell}\n\t\t\t\t\t\t\tdeleteRecordInDB={deleteProducts}\n\t\t\t\t\t\t\taddRecordInDB={addProduct}\n\t\t\t\t\t\t\tupdateRecordInDB={updateProduct}\n\t\t\t\t\t\t\terrorMsg={errorMsg}\n\t\t\t\t\t\t\tresetErrorMsg={resetErrorMsg}\n\t\t\t\t\t\t\ttableName='Products'\n\t\t\t\t\t\t\tmakeSubRow={ProductSubRow}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Spin>\n\t\t\t\t</div>\n\t\t\t</Content>\n\t\t</>\n\t);\n}\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}