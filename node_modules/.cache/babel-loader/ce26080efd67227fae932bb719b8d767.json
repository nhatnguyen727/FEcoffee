{"ast":null,"code":"import \"antd/lib/spin/style\";\nimport _Spin from \"antd/lib/spin\";\n\nvar _jsxFileName = \"/home/nhatnt/TN/FEcoffee/src/components/profile/Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Container, Grid, Avatar, Box, Button, TextField, Snackbar, withStyles, makeStyles } from '@material-ui/core';\nimport { Card, CardActions, CardContent, Divider, CardHeader } from '@material-ui/core';\nimport { Dialog, DialogTitle, DialogContentText, DialogContent, DialogActions } from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport { Autocomplete } from '@material-ui/lab';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useProfile } from '../app-context/ProfileProvider';\nimport ProfileSkeleton from './ProfileSkeleton';\nimport './Profile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ValidationTextField = withStyles({\n  root: {\n    '& input:valid + fieldset': {\n      borderColor: 'green'\n    },\n    '& input:invalid + fieldset': {\n      borderColor: 'red'\n    },\n    '& input:valid:focus + fieldset': {\n      borderLeftWidth: 6\n    }\n  }\n})(TextField);\nconst generalInputStyle = {\n  variant: 'outlined',\n  size: 'small',\n  type: 'text',\n  required: true,\n  style: {\n    marginBottom: '10px',\n    width: '90%'\n  }\n};\nconst useStyles = makeStyles(({\n  breakpoints\n}) => ({\n  inputProps: {\n    fontSize: 16,\n    [breakpoints.down('xs')]: {\n      fontSize: 12\n    }\n  },\n  InputLabelProps: {\n    fontSize: 16,\n    [breakpoints.down('xs')]: {\n      fontSize: 12,\n      letterSpacing: '-1px'\n    }\n  },\n  autocompleteFont: {\n    fontSize: 14\n  }\n}));\n\nfunction Profile() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    roles,\n    profile,\n    handleChange,\n    updateUser,\n    profileLoading,\n    errorMsg,\n    setErrorMsgContent\n  } = useProfile();\n  const [emailError, setEmailError] = React.useState(false);\n  const [phoneError, setPhoneError] = React.useState(false);\n  const [usernameError, setUsernameError] = React.useState(false);\n  const [pwdError, setPwdError] = React.useState(false);\n  const [pwdConfirmError, setPwdConfirmError] = React.useState(false);\n  const [pwdValues, setPwdValues] = React.useState({\n    password: '',\n    showPassword: false\n  });\n  const [confirmPwdValues, setConfirmPwdValues] = React.useState({\n    confirmPwd: '',\n    showConfirmPassword: false\n  });\n  const [openErrorMsg, setOpenErrorMsg] = React.useState(false);\n  const [imgURL, setImgURL] = React.useState('');\n  const [dlgOpen, setDlgOpen] = React.useState(false);\n\n  const handleSaveRecord = () => {\n    if (profile.fullname === '' || profile.address === '' || emailError || phoneError || usernameError || pwdError || pwdConfirmError) {\n      setErrorMsgContent('Please input all required fields!');\n      setOpenErrorMsg(true);\n    } else {\n      updateUser(profile);\n    }\n  };\n\n  const handleFieldsChange = fieldName => ({\n    target: {\n      value\n    }\n  }) => {\n    handleChange(fieldName, value);\n  };\n\n  const handleEmailChange = fieldName => ({\n    target: {\n      value\n    }\n  }) => {\n    handleChange(fieldName, value);\n\n    if (/^\\w+([-.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/.test(value)) {\n      setEmailError(false);\n    } else {\n      setEmailError(true);\n    }\n  };\n\n  const handlePhoneChange = fieldName => ({\n    target: {\n      value\n    }\n  }) => {\n    handleChange(fieldName, value);\n\n    if (/^[0-9]{10,11}$/.test(value)) {\n      setPhoneError(false);\n    } else {\n      setPhoneError(true);\n    }\n  };\n\n  const handleUsernameChange = fieldName => ({\n    target: {\n      value\n    }\n  }) => {\n    handleChange(fieldName, value);\n\n    if (/^(?=.{4,20}$)[a-zA-Z0-9._]+$/.test(value)) {\n      setUsernameError(false);\n    } else {\n      setUsernameError(true);\n    }\n  };\n\n  const handlePasswordChange = fieldName => ({\n    target: {\n      value\n    }\n  }) => {\n    handleChange(fieldName, value);\n    setPwdValues({ ...pwdValues,\n      [fieldName]: value\n    });\n\n    if (/^(?=\\S+$).{4,}$/.test(value)) {\n      setPwdError(false);\n    } else {\n      setPwdError(true);\n    }\n\n    if (value === confirmPwdValues.confirmPwd) {\n      setPwdConfirmError(false);\n    } else {\n      setPwdConfirmError(true);\n    }\n  };\n\n  const handleConfirmPasswordChange = fieldName => ({\n    target: {\n      value\n    }\n  }) => {\n    setConfirmPwdValues({ ...confirmPwdValues,\n      [fieldName]: value\n    });\n\n    if (value !== pwdValues.password) {\n      setPwdConfirmError(true);\n    } else {\n      setPwdConfirmError(false);\n    }\n  };\n\n  const handleClickShowPassword = e => {\n    e.preventDefault();\n    setPwdValues({ ...pwdValues,\n      showPassword: !pwdValues.showPassword\n    });\n  };\n\n  const handleClickShowConfirmPassword = e => {\n    e.preventDefault();\n    setConfirmPwdValues({ ...confirmPwdValues,\n      showConfirmPassword: !confirmPwdValues.showConfirmPassword\n    });\n  };\n\n  const handleErrorClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenErrorMsg(false);\n    setErrorMsgContent(); // set back to initial state\n  };\n\n  React.useEffect(() => {\n    if (errorMsg !== undefined) {\n      setOpenErrorMsg(true);\n    }\n  }, [errorMsg]);\n\n  const handleImgChange = e => {\n    setImgURL(e.target.value);\n  }; // this does not update in database, just set and show,\n  // the real update happens when user hit the save button\n\n\n  const handleImgUpdate = () => {\n    handleChange('photo', imgURL);\n    setDlgOpen(false);\n    setImgURL('');\n  };\n\n  if (roles.length === 0 || profile === undefined) {\n    return /*#__PURE__*/_jsxDEV(ProfileSkeleton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 10\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(_Spin, {\n      spinning: profileLoading,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 4,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                alignItems: \"center\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  style: {\n                    height: 100,\n                    width: 100\n                  },\n                  src: profile.photo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-lg xs:text-2xl font-bold\",\n                  children: profile.fullname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-normal xs:text-lg font-base text-gray-500\",\n                  children: profile.address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                fullWidth: true,\n                variant: \"text\",\n                onClick: () => setDlgOpen(true),\n                children: \"Upload picture\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n            fullWidth: true,\n            open: dlgOpen,\n            onClose: () => setDlgOpen(false),\n            \"aria-labelledby\": \"form-dialog-title\",\n            children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n              children: \"Update User's Profile Photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n              children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n                children: \"Please enter a new image URL! (upload then hit the save button)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                autoFocus: true,\n                value: imgURL,\n                label: \"Image URL\",\n                fullWidth: true,\n                onChange: handleImgChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n              className: \"mx-2\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => setDlgOpen(false),\n                color: \"primary\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleImgUpdate,\n                color: \"primary\",\n                children: \"Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 8,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              title: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-lg xs:text-xl font-bold\",\n                children: \"Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-normal xs:text-base text-gray-400 px-4\",\n              children: \"The information can be edited\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(ValidationTextField, { ...generalInputStyle,\n                    label: \"Full Name\",\n                    value: profile.fullname,\n                    onChange: handleFieldsChange('fullname'),\n                    autoFocus: true,\n                    inputProps: {\n                      className: classes.inputProps\n                    },\n                    InputLabelProps: {\n                      className: classes.InputLabelProps\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(ValidationTextField, { ...generalInputStyle,\n                    inputProps: {\n                      pattern: '^\\\\w+([-.]\\\\w+)*@\\\\w+([-.]\\\\w+)*\\\\.\\\\w+([-.]\\\\w+)*$',\n                      className: classes.inputProps\n                    },\n                    label: \"Email\",\n                    value: profile.email,\n                    onChange: handleEmailChange('email'),\n                    error: emailError,\n                    helperText: emailError ? 'E-mail must be in following format: email@example.com' : '',\n                    InputLabelProps: {\n                      className: classes.InputLabelProps\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(ValidationTextField, { ...generalInputStyle,\n                    inputProps: {\n                      pattern: '^[0-9]{10,11}$',\n                      className: classes.inputProps\n                    },\n                    label: \"Phone Number\",\n                    value: profile.phone,\n                    onChange: handlePhoneChange('phone'),\n                    error: phoneError,\n                    helperText: phoneError ? 'Phone number must be 10 to 11 digits.' : '',\n                    InputLabelProps: {\n                      className: classes.InputLabelProps\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(ValidationTextField, { ...generalInputStyle,\n                    label: \"Address\",\n                    value: profile.address,\n                    onChange: handleFieldsChange('address'),\n                    inputProps: {\n                      className: classes.inputProps\n                    },\n                    InputLabelProps: {\n                      className: classes.InputLabelProps\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 12,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-normal xs:text-base text-gray-400\",\n                    children: \"***You will be logged out if you change these fields below\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(ValidationTextField, { ...generalInputStyle,\n                    inputProps: {\n                      pattern: '^(?=.{4,20}$)[a-zA-Z0-9._]+$',\n                      className: classes.inputProps\n                    },\n                    label: \"Username\",\n                    value: profile.username,\n                    onChange: handleUsernameChange('username'),\n                    error: usernameError,\n                    helperText: usernameError ? 'Username must be 4 to 20 chars; Only alphanumeric chars, underscores and dots are allowed.' : '',\n                    InputLabelProps: {\n                      className: classes.InputLabelProps\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                    options: roles,\n                    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                      variant: \"outlined\",\n                      size: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 37\n                    }, this),\n                    defaultValue: roles[roles.map(role => role.id).indexOf(1)],\n                    getOptionLabel: value => value.name,\n                    onChange: (event, newValue) => handleChange('role', newValue),\n                    disableClearable: true,\n                    classes: {\n                      input: classes.autocompleteFont\n                    },\n                    style: {\n                      width: '90%',\n                      marginBottom: '10px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  xs: 12,\n                  style: {\n                    position: 'relative'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(ValidationTextField, { ...generalInputStyle,\n                    required: false,\n                    inputProps: {\n                      pattern: '^(?=\\\\S+$).{4,}$',\n                      className: classes.inputProps\n                    },\n                    label: \"Password\",\n                    type: pwdValues.showPassword ? 'text' : 'password',\n                    value: pwdValues.password,\n                    onChange: handlePasswordChange('password'),\n                    error: pwdError,\n                    helperText: pwdError ? 'Password must be at least 4 chars, and not contains whitespace.' : '',\n                    InputLabelProps: {\n                      className: classes.InputLabelProps\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"profile__visibilityIcon\",\n                    onClick: handleClickShowPassword,\n                    children: pwdValues.showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 310,\n                      columnNumber: 38\n                    }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 310,\n                      columnNumber: 55\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  xs: 12,\n                  style: {\n                    position: 'relative'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(ValidationTextField, { ...generalInputStyle,\n                    required: false,\n                    inputProps: {\n                      pattern: '^(?=\\\\S+$).{4,}$',\n                      className: classes.inputProps\n                    },\n                    label: \"Retype Password\",\n                    type: confirmPwdValues.showConfirmPassword ? 'text' : 'password',\n                    value: confirmPwdValues.confirmPwd,\n                    onChange: handleConfirmPasswordChange('confirmPwd'),\n                    error: pwdConfirmError,\n                    helperText: pwdConfirmError ? 'Password and confirmation password do not match!' : '',\n                    InputLabelProps: {\n                      className: classes.InputLabelProps\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"profile__visibilityIcon\",\n                    onClick: handleClickShowConfirmPassword,\n                    children: confirmPwdValues.showConfirmPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 52\n                    }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 69\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              p: 2,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                variant: \"contained\",\n                onClick: handleSaveRecord,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openErrorMsg,\n      autoHideDuration: 5000,\n      onClose: handleErrorClose,\n      children: /*#__PURE__*/_jsxDEV(MuiAlert, {\n        elevation: 6,\n        variant: \"filled\",\n        severity: \"error\",\n        onClose: handleErrorClose,\n        children: errorMsg !== undefined ? errorMsg : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Profile, \"PfZWJvdWicFlehcePpFfP8VF9Yg=\", false, function () {\n  return [useStyles, useProfile];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/nhatnt/TN/FEcoffee/src/components/profile/Profile.jsx"],"names":["React","Container","Grid","Avatar","Box","Button","TextField","Snackbar","withStyles","makeStyles","Card","CardActions","CardContent","Divider","CardHeader","Dialog","DialogTitle","DialogContentText","DialogContent","DialogActions","Visibility","VisibilityOff","Autocomplete","MuiAlert","useProfile","ProfileSkeleton","ValidationTextField","root","borderColor","borderLeftWidth","generalInputStyle","variant","size","type","required","style","marginBottom","width","useStyles","breakpoints","inputProps","fontSize","down","InputLabelProps","letterSpacing","autocompleteFont","Profile","classes","roles","profile","handleChange","updateUser","profileLoading","errorMsg","setErrorMsgContent","emailError","setEmailError","useState","phoneError","setPhoneError","usernameError","setUsernameError","pwdError","setPwdError","pwdConfirmError","setPwdConfirmError","pwdValues","setPwdValues","password","showPassword","confirmPwdValues","setConfirmPwdValues","confirmPwd","showConfirmPassword","openErrorMsg","setOpenErrorMsg","imgURL","setImgURL","dlgOpen","setDlgOpen","handleSaveRecord","fullname","address","handleFieldsChange","fieldName","target","value","handleEmailChange","test","handlePhoneChange","handleUsernameChange","handlePasswordChange","handleConfirmPasswordChange","handleClickShowPassword","e","preventDefault","handleClickShowConfirmPassword","handleErrorClose","event","reason","useEffect","undefined","handleImgChange","handleImgUpdate","length","height","photo","className","pattern","email","phone","username","params","map","role","id","indexOf","name","newValue","input","position"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Container, Grid, Avatar, Box, Button, TextField, Snackbar, withStyles, makeStyles } from '@material-ui/core';\nimport { Card, CardActions, CardContent, Divider, CardHeader } from '@material-ui/core';\nimport { Dialog, DialogTitle, DialogContentText, DialogContent, DialogActions } from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport { Autocomplete } from '@material-ui/lab';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { Spin } from 'antd';\nimport { useProfile } from '../app-context/ProfileProvider';\nimport ProfileSkeleton from './ProfileSkeleton';\nimport './Profile.css';\n\nconst ValidationTextField = withStyles({\n\troot: {\n\t\t'& input:valid + fieldset': {\n\t\t\tborderColor: 'green',\n\t\t},\n\t\t'& input:invalid + fieldset': {\n\t\t\tborderColor: 'red',\n\t\t},\n\t\t'& input:valid:focus + fieldset': {\n\t\t\tborderLeftWidth: 6,\n\t\t},\n\t},\n})(TextField);\n\nconst generalInputStyle = {\n\tvariant: 'outlined',\n\tsize: 'small',\n\ttype: 'text',\n\trequired: true,\n\tstyle: { marginBottom: '10px', width: '90%' },\n};\n\nconst useStyles = makeStyles(({ breakpoints }) => ({\n\tinputProps: {\n\t\tfontSize: 16,\n\t\t[breakpoints.down('xs')]: {\n\t\t\tfontSize: 12,\n\t\t},\n\t},\n\tInputLabelProps: {\n\t\tfontSize: 16,\n\t\t[breakpoints.down('xs')]: {\n\t\t\tfontSize: 12,\n\t\t\tletterSpacing: '-1px',\n\t\t},\n\t},\n\tautocompleteFont: {\n\t\tfontSize: 14,\n\t},\n}));\n\nfunction Profile() {\n\tconst classes = useStyles();\n\tconst { roles, profile, handleChange, updateUser, profileLoading, errorMsg, setErrorMsgContent } = useProfile();\n\tconst [emailError, setEmailError] = React.useState(false);\n\tconst [phoneError, setPhoneError] = React.useState(false);\n\tconst [usernameError, setUsernameError] = React.useState(false);\n\tconst [pwdError, setPwdError] = React.useState(false);\n\tconst [pwdConfirmError, setPwdConfirmError] = React.useState(false);\n\tconst [pwdValues, setPwdValues] = React.useState({ password: '', showPassword: false });\n\tconst [confirmPwdValues, setConfirmPwdValues] = React.useState({ confirmPwd: '', showConfirmPassword: false });\n\tconst [openErrorMsg, setOpenErrorMsg] = React.useState(false);\n\tconst [imgURL, setImgURL] = React.useState('');\n\tconst [dlgOpen, setDlgOpen] = React.useState(false);\n\n\tconst handleSaveRecord = () => {\n\t\tif (profile.fullname === '' || profile.address === '' || emailError || phoneError || usernameError || pwdError || pwdConfirmError) {\n\t\t\tsetErrorMsgContent('Please input all required fields!');\n\t\t\tsetOpenErrorMsg(true);\n\t\t} else {\n\t\t\tupdateUser(profile);\n\t\t}\n\t};\n\n\tconst handleFieldsChange = (fieldName) => ({ target: { value } }) => {\n\t\thandleChange(fieldName, value);\n\t};\n\n\tconst handleEmailChange = (fieldName) => ({ target: { value } }) => {\n\t\thandleChange(fieldName, value);\n\t\tif (/^\\w+([-.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/.test(value)) {\n\t\t\tsetEmailError(false);\n\t\t} else {\n\t\t\tsetEmailError(true);\n\t\t}\n\t};\n\n\tconst handlePhoneChange = (fieldName) => ({ target: { value } }) => {\n\t\thandleChange(fieldName, value);\n\t\tif (/^[0-9]{10,11}$/.test(value)) {\n\t\t\tsetPhoneError(false);\n\t\t} else {\n\t\t\tsetPhoneError(true);\n\t\t}\n\t};\n\n\tconst handleUsernameChange = (fieldName) => ({ target: { value } }) => {\n\t\thandleChange(fieldName, value);\n\t\tif (/^(?=.{4,20}$)[a-zA-Z0-9._]+$/.test(value)) {\n\t\t\tsetUsernameError(false);\n\t\t} else {\n\t\t\tsetUsernameError(true);\n\t\t}\n\t};\n\n\tconst handlePasswordChange = (fieldName) => ({ target: { value } }) => {\n\t\thandleChange(fieldName, value);\n\t\tsetPwdValues({ ...pwdValues, [fieldName]: value });\n\t\tif (/^(?=\\S+$).{4,}$/.test(value)) {\n\t\t\tsetPwdError(false);\n\t\t} else {\n\t\t\tsetPwdError(true);\n\t\t}\n\t\tif (value === confirmPwdValues.confirmPwd) {\n\t\t\tsetPwdConfirmError(false);\n\t\t} else {\n\t\t\tsetPwdConfirmError(true);\n\t\t}\n\t};\n\n\tconst handleConfirmPasswordChange = (fieldName) => ({ target: { value } }) => {\n\t\tsetConfirmPwdValues({ ...confirmPwdValues, [fieldName]: value });\n\t\tif (value !== pwdValues.password) {\n\t\t\tsetPwdConfirmError(true);\n\t\t} else {\n\t\t\tsetPwdConfirmError(false);\n\t\t}\n\t};\n\n\tconst handleClickShowPassword = (e) => {\n\t\te.preventDefault();\n\t\tsetPwdValues({ ...pwdValues, showPassword: !pwdValues.showPassword });\n\t};\n\n\tconst handleClickShowConfirmPassword = (e) => {\n\t\te.preventDefault();\n\t\tsetConfirmPwdValues({ ...confirmPwdValues, showConfirmPassword: !confirmPwdValues.showConfirmPassword });\n\t};\n\n\tconst handleErrorClose = (event, reason) => {\n\t\tif (reason === 'clickaway') {\n\t\t\treturn;\n\t\t}\n\t\tsetOpenErrorMsg(false);\n\t\tsetErrorMsgContent(); // set back to initial state\n\t};\n\n\tReact.useEffect(() => {\n\t\tif (errorMsg !== undefined) {\n\t\t\tsetOpenErrorMsg(true);\n\t\t}\n\t}, [errorMsg]);\n\n\tconst handleImgChange = (e) => {\n\t\tsetImgURL(e.target.value);\n\t};\n\n\t// this does not update in database, just set and show,\n\t// the real update happens when user hit the save button\n\tconst handleImgUpdate = () => {\n\t\thandleChange('photo', imgURL);\n\t\tsetDlgOpen(false);\n\t\tsetImgURL('');\n\t};\n\n\tif (roles.length === 0 || profile === undefined) {\n\t\treturn <ProfileSkeleton />;\n\t}\n\treturn (\n\t\t<Container className='mt-4'>\n\t\t\t<Spin spinning={profileLoading}>\n\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t<Grid item md={4} xs={12}>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t<Box alignItems='center' display='flex' flexDirection='column'>\n\t\t\t\t\t\t\t\t\t<Avatar style={{ height: 100, width: 100 }} src={profile.photo} />\n\t\t\t\t\t\t\t\t\t<p className='text-lg xs:text-2xl font-bold'>{profile.fullname}</p>\n\t\t\t\t\t\t\t\t\t<p className='text-normal xs:text-lg font-base text-gray-500'>{profile.address}</p>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t<Button color='primary' fullWidth variant='text' onClick={() => setDlgOpen(true)}>\n\t\t\t\t\t\t\t\t\tUpload picture\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t<Dialog fullWidth open={dlgOpen} onClose={() => setDlgOpen(false)} aria-labelledby='form-dialog-title'>\n\t\t\t\t\t\t\t<DialogTitle>Update User's Profile Photo</DialogTitle>\n\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t<DialogContentText>Please enter a new image URL! (upload then hit the save button)</DialogContentText>\n\t\t\t\t\t\t\t\t<TextField autoFocus value={imgURL} label='Image URL' fullWidth onChange={handleImgChange} />\n\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t<DialogActions className='mx-2'>\n\t\t\t\t\t\t\t\t<Button onClick={() => setDlgOpen(false)} color='primary'>\n\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button onClick={handleImgUpdate} color='primary'>\n\t\t\t\t\t\t\t\t\tUpload\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item md={8} xs={12}>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<CardHeader title={<p className='text-lg xs:text-xl font-bold'>Profile</p>} />\n\t\t\t\t\t\t\t<p className='text-normal xs:text-base text-gray-400 px-4'>The information can be edited</p>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<ValidationTextField\n\t\t\t\t\t\t\t\t\t\t\t{...generalInputStyle}\n\t\t\t\t\t\t\t\t\t\t\tlabel='Full Name'\n\t\t\t\t\t\t\t\t\t\t\tvalue={profile.fullname}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleFieldsChange('fullname')}\n\t\t\t\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{ className: classes.inputProps }}\n\t\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ className: classes.InputLabelProps }}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<ValidationTextField\n\t\t\t\t\t\t\t\t\t\t\t{...generalInputStyle}\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tpattern: '^\\\\w+([-.]\\\\w+)*@\\\\w+([-.]\\\\w+)*\\\\.\\\\w+([-.]\\\\w+)*$',\n\t\t\t\t\t\t\t\t\t\t\t\tclassName: classes.inputProps,\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tlabel='Email'\n\t\t\t\t\t\t\t\t\t\t\tvalue={profile.email}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleEmailChange('email')}\n\t\t\t\t\t\t\t\t\t\t\terror={emailError}\n\t\t\t\t\t\t\t\t\t\t\thelperText={emailError ? 'E-mail must be in following format: email@example.com' : ''}\n\t\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ className: classes.InputLabelProps }}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<ValidationTextField\n\t\t\t\t\t\t\t\t\t\t\t{...generalInputStyle}\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{ pattern: '^[0-9]{10,11}$', className: classes.inputProps }}\n\t\t\t\t\t\t\t\t\t\t\tlabel='Phone Number'\n\t\t\t\t\t\t\t\t\t\t\tvalue={profile.phone}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handlePhoneChange('phone')}\n\t\t\t\t\t\t\t\t\t\t\terror={phoneError}\n\t\t\t\t\t\t\t\t\t\t\thelperText={phoneError ? 'Phone number must be 10 to 11 digits.' : ''}\n\t\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ className: classes.InputLabelProps }}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<ValidationTextField\n\t\t\t\t\t\t\t\t\t\t\t{...generalInputStyle}\n\t\t\t\t\t\t\t\t\t\t\tlabel='Address'\n\t\t\t\t\t\t\t\t\t\t\tvalue={profile.address}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleFieldsChange('address')}\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{ className: classes.inputProps }}\n\t\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ className: classes.InputLabelProps }}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={12} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<p className='text-normal xs:text-base text-gray-400'>\n\t\t\t\t\t\t\t\t\t\t\t***You will be logged out if you change these fields below\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<ValidationTextField\n\t\t\t\t\t\t\t\t\t\t\t{...generalInputStyle}\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{ pattern: '^(?=.{4,20}$)[a-zA-Z0-9._]+$', className: classes.inputProps }}\n\t\t\t\t\t\t\t\t\t\t\tlabel='Username'\n\t\t\t\t\t\t\t\t\t\t\tvalue={profile.username}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleUsernameChange('username')}\n\t\t\t\t\t\t\t\t\t\t\terror={usernameError}\n\t\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\t\tusernameError\n\t\t\t\t\t\t\t\t\t\t\t\t\t? 'Username must be 4 to 20 chars; Only alphanumeric chars, underscores and dots are allowed.'\n\t\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ className: classes.InputLabelProps }}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\t\t\t\t\toptions={roles}\n\t\t\t\t\t\t\t\t\t\t\trenderInput={(params) => <TextField {...params} variant='outlined' size='small' />}\n\t\t\t\t\t\t\t\t\t\t\tdefaultValue={roles[roles.map((role) => role.id).indexOf(1)]}\n\t\t\t\t\t\t\t\t\t\t\tgetOptionLabel={(value) => value.name}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(event, newValue) => handleChange('role', newValue)}\n\t\t\t\t\t\t\t\t\t\t\tdisableClearable\n\t\t\t\t\t\t\t\t\t\t\tclasses={{ input: classes.autocompleteFont }}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '90%', marginBottom: '10px' }}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12} style={{ position: 'relative' }}>\n\t\t\t\t\t\t\t\t\t\t<ValidationTextField\n\t\t\t\t\t\t\t\t\t\t\t{...generalInputStyle}\n\t\t\t\t\t\t\t\t\t\t\trequired={false}\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{ pattern: '^(?=\\\\S+$).{4,}$', className: classes.inputProps }}\n\t\t\t\t\t\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t\t\t\t\t\t\ttype={pwdValues.showPassword ? 'text' : 'password'}\n\t\t\t\t\t\t\t\t\t\t\tvalue={pwdValues.password}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handlePasswordChange('password')}\n\t\t\t\t\t\t\t\t\t\t\terror={pwdError}\n\t\t\t\t\t\t\t\t\t\t\thelperText={pwdError ? 'Password must be at least 4 chars, and not contains whitespace.' : ''}\n\t\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ className: classes.InputLabelProps }}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<div className='profile__visibilityIcon' onClick={handleClickShowPassword}>\n\t\t\t\t\t\t\t\t\t\t\t{pwdValues.showPassword ? <Visibility /> : <VisibilityOff />}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12} style={{ position: 'relative' }}>\n\t\t\t\t\t\t\t\t\t\t<ValidationTextField\n\t\t\t\t\t\t\t\t\t\t\t{...generalInputStyle}\n\t\t\t\t\t\t\t\t\t\t\trequired={false}\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{ pattern: '^(?=\\\\S+$).{4,}$', className: classes.inputProps }}\n\t\t\t\t\t\t\t\t\t\t\tlabel='Retype Password'\n\t\t\t\t\t\t\t\t\t\t\ttype={confirmPwdValues.showConfirmPassword ? 'text' : 'password'}\n\t\t\t\t\t\t\t\t\t\t\tvalue={confirmPwdValues.confirmPwd}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleConfirmPasswordChange('confirmPwd')}\n\t\t\t\t\t\t\t\t\t\t\terror={pwdConfirmError}\n\t\t\t\t\t\t\t\t\t\t\thelperText={pwdConfirmError ? 'Password and confirmation password do not match!' : ''}\n\t\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ className: classes.InputLabelProps }}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<div className='profile__visibilityIcon' onClick={handleClickShowConfirmPassword}>\n\t\t\t\t\t\t\t\t\t\t\t{confirmPwdValues.showConfirmPassword ? <Visibility /> : <VisibilityOff />}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t<Box p={2}>\n\t\t\t\t\t\t\t\t<Button color='primary' variant='contained' onClick={handleSaveRecord}>\n\t\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Spin>\n\t\t\t<Snackbar open={openErrorMsg} autoHideDuration={5000} onClose={handleErrorClose}>\n\t\t\t\t<MuiAlert elevation={6} variant='filled' severity='error' onClose={handleErrorClose}>\n\t\t\t\t\t{errorMsg !== undefined ? errorMsg : ''}\n\t\t\t\t</MuiAlert>\n\t\t\t</Snackbar>\n\t\t</Container>\n\t);\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}