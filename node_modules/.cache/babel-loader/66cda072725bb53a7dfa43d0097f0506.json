{"ast":null,"code":"var _jsxFileName = \"/home/nhatnt/TN/FEcoffee/src/client/components/app-context/CategoryProvider.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useContext, createContext, useState, useEffect } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { SERVER_URL } from '../../../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryContext = /*#__PURE__*/createContext();\nexport const useCategories = () => {\n  _s();\n\n  return useContext(CategoryContext);\n};\n\n_s(useCategories, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nfunction CategoryProvider({\n  children\n}) {\n  _s2();\n\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState({\n    id: 0,\n    name: ''\n  });\n  const [categoryLoading, setCategoryLoading] = useState(false);\n  const {\n    url\n  } = useRouteMatch();\n  const history = useHistory();\n\n  const getSelectedCategory = (id, name) => {\n    setSelectedCategory({\n      id: id,\n      name: name\n    });\n    history.push(`${url}/category=${name}`);\n    window.scrollTo(0, 0);\n  };\n\n  useEffect(() => {\n    setCategoryLoading(true);\n    fetch(SERVER_URL + '/category').then(response => response.json()).then(setCategories).then(() => setCategoryLoading(false));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CategoryContext.Provider, {\n    value: {\n      categories,\n      selectedCategory,\n      categoryLoading,\n      getSelectedCategory\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n}\n\n_s2(CategoryProvider, \"Y4L0+dDDI1Eu5buxSGDGq4hAkV4=\", false, function () {\n  return [useRouteMatch, useHistory];\n});\n\n_c = CategoryProvider;\nexport default CategoryProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryProvider\");","map":{"version":3,"sources":["/home/nhatnt/TN/FEcoffee/src/client/components/app-context/CategoryProvider.jsx"],"names":["useContext","createContext","useState","useEffect","useHistory","useRouteMatch","SERVER_URL","CategoryContext","useCategories","CategoryProvider","children","categories","setCategories","selectedCategory","setSelectedCategory","id","name","categoryLoading","setCategoryLoading","url","history","getSelectedCategory","push","window","scrollTo","fetch","then","response","json"],"mappings":";;;;AAAA,SAASA,UAAT,EAAqBC,aAArB,EAAoCC,QAApC,EAA8CC,SAA9C,QAA+D,OAA/D;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,kBAA1C;AACA,SAASC,UAAT,QAA2B,oBAA3B;;AAEA,MAAMC,eAAe,gBAAGN,aAAa,EAArC;AAEA,OAAO,MAAMO,aAAa,GAAG;AAAA;;AAAA,SAAMR,UAAU,CAACO,eAAD,CAAhB;AAAA,CAAtB;;GAAMC,a;;AAEb,SAASC,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAwC;AAAA;;AACvC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,gBAAD,EAAmBC,mBAAnB,IAA0CZ,QAAQ,CAAC;AAAEa,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAAD,CAAxD;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwChB,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM;AAAEiB,IAAAA;AAAF,MAAUd,aAAa,EAA7B;AACA,QAAMe,OAAO,GAAGhB,UAAU,EAA1B;;AAEA,QAAMiB,mBAAmB,GAAG,CAACN,EAAD,EAAKC,IAAL,KAAc;AACzCF,IAAAA,mBAAmB,CAAC;AAAEC,MAAAA,EAAE,EAAEA,EAAN;AAAUC,MAAAA,IAAI,EAAEA;AAAhB,KAAD,CAAnB;AACAI,IAAAA,OAAO,CAACE,IAAR,CAAc,GAAEH,GAAI,aAAYH,IAAK,EAArC;AACAO,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACA,GAJD;;AAMArB,EAAAA,SAAS,CAAC,MAAM;AACfe,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAO,IAAAA,KAAK,CAACnB,UAAU,GAAG,WAAd,CAAL,CACEoB,IADF,CACQC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADrB,EAEEF,IAFF,CAEOd,aAFP,EAGEc,IAHF,CAGO,MAAMR,kBAAkB,CAAC,KAAD,CAH/B;AAIA,GANQ,EAMN,EANM,CAAT;AAQA,sBACC,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEP,MAAAA,UAAF;AAAcE,MAAAA,gBAAd;AAAgCI,MAAAA,eAAhC;AAAiDI,MAAAA;AAAjD,KAAjC;AAAA,cAA0GX;AAA1G;AAAA;AAAA;AAAA;AAAA,UADD;AAGA;;IAxBQD,gB;UAIQJ,a,EACAD,U;;;KALRK,gB;AA0BT,eAAeA,gBAAf","sourcesContent":["import { useContext, createContext, useState, useEffect } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { SERVER_URL } from '../../../constants';\n\nconst CategoryContext = createContext();\n\nexport const useCategories = () => useContext(CategoryContext);\n\nfunction CategoryProvider({ children }) {\n\tconst [categories, setCategories] = useState([]);\n\tconst [selectedCategory, setSelectedCategory] = useState({ id: 0, name: '' });\n\tconst [categoryLoading, setCategoryLoading] = useState(false);\n\tconst { url } = useRouteMatch();\n\tconst history = useHistory();\n\n\tconst getSelectedCategory = (id, name) => {\n\t\tsetSelectedCategory({ id: id, name: name });\n\t\thistory.push(`${url}/category=${name}`);\n\t\twindow.scrollTo(0, 0);\n\t};\n\n\tuseEffect(() => {\n\t\tsetCategoryLoading(true);\n\t\tfetch(SERVER_URL + '/category')\n\t\t\t.then((response) => response.json())\n\t\t\t.then(setCategories)\n\t\t\t.then(() => setCategoryLoading(false));\n\t}, []);\n\n\treturn (\n\t\t<CategoryContext.Provider value={{ categories, selectedCategory, categoryLoading, getSelectedCategory }}>{children}</CategoryContext.Provider>\n\t);\n}\n\nexport default CategoryProvider;\n"]},"metadata":{},"sourceType":"module"}