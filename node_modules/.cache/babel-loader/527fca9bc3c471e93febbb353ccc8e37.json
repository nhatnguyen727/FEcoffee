{"ast":null,"code":"import \"antd/lib/spin/style\";\nimport _Spin from \"antd/lib/spin\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/descriptions/style\";\nimport _Descriptions from \"antd/lib/descriptions\";\nimport \"antd/lib/tag/style\";\nimport _Tag from \"antd/lib/tag\";\nimport \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\n\nvar _jsxFileName = \"/home/nhatnt/TN/FEcoffee/src/client/components/history/OrderHistory.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useOrderHistory } from '../app-context/OrderHistoryProvider';\nimport Redirector from '../../Redirector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Content\n} = _Layout;\n\nfunction OrderHistory() {\n  _s();\n\n  const {\n    orders,\n    orderLoading\n  } = useOrderHistory();\n  const [tableItems, setTableItems] = React.useState([]);\n  React.useMemo(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  const columns = React.useMemo(() => [{\n    title: 'Recipient Name',\n    dataIndex: 'recipientName',\n    key: 'recipientName'\n  }, {\n    title: 'Order Address',\n    dataIndex: 'orderAddress',\n    key: 'orderAddress'\n  }, {\n    title: 'Phone Number',\n    dataIndex: 'phone',\n    key: 'phone'\n  }, {\n    title: 'Order Date',\n    dataIndex: 'orderDate',\n    key: 'orderDate'\n  }, {\n    title: 'Order Status',\n    dataIndex: 'orderStatus',\n    key: 'orderStatus'\n  }], []);\n  const expandableColumns = React.useMemo(() => [{\n    title: 'Product Name',\n    dataIndex: 'productName',\n    key: 'productName'\n  }, {\n    title: 'Size',\n    dataIndex: 'size',\n    key: 'size'\n  }, {\n    title: 'Toppings',\n    dataIndex: 'toppings',\n    key: 'toppings',\n    render: toppings => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: toppings.map(topping => {\n        let color = topping.name.length > 6 ? 'geekblue' : 'green';\n\n        if (topping.name === 'Chocolate') {\n          color = 'volcano';\n        }\n\n        return /*#__PURE__*/_jsxDEV(_Tag, {\n          color: color,\n          children: topping.name.toUpperCase()\n        }, topping.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 6\n    }, this)\n  }, {\n    title: 'Quantity',\n    dataIndex: 'quantity',\n    key: 'quantity'\n  }, {\n    title: 'Note',\n    dataIndex: 'note',\n    key: 'note'\n  }], []);\n  React.useEffect(() => {\n    setTableItems(() => {\n      return orders.map(order => {\n        return {\n          key: order.id,\n          // required by ant table\n          recipientName: order.recipientName,\n          orderAddress: order.orderAddress,\n          phone: order.phone,\n          orderDate: new Date(order.orderDate).toLocaleDateString('en-US') + ' ' + new Date(order.orderDate).toLocaleTimeString('en-US'),\n          orderStatus: order.orderStatus,\n          user: {\n            id: order.user.id\n          },\n          details: order.details\n        };\n      });\n    });\n  }, [orders]);\n\n  const getSubItems = record => {\n    return record.details.map(detail => {\n      return {\n        key: detail.id,\n        // required by ant table\n        productName: detail.product.name,\n        size: detail.size.name,\n        toppings: [...detail.toppings],\n        quantity: detail.quantity,\n        note: detail.note\n      };\n    });\n  };\n\n  if (sessionStorage.getItem('starbucks-member') === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '88px 8vw'\n      },\n      children: /*#__PURE__*/_jsxDEV(Redirector, {\n        subTitle: \"If you signed in, your previous orders will appear here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 4\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Content, {\n    style: {\n      padding: '120px 8vw',\n      minHeight: '60vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(_Descriptions, {\n      title: \"Order History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(_Spin, {\n        spinning: orderLoading,\n        children: /*#__PURE__*/_jsxDEV(_Table, {\n          columns: columns,\n          expandable: {\n            expandedRowRender: record => {\n              return /*#__PURE__*/_jsxDEV(_Table, {\n                columns: expandableColumns,\n                dataSource: getSubItems(record),\n                pagination: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 16\n              }, this); // if you want to return a value by calling a function in brackets: {function(params)}\n              // if you want to call a function in brackets: {() => function(params)} (errors in this case)\n            }\n          },\n          dataSource: tableItems,\n          pagination: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 3\n  }, this);\n}\n\n_s(OrderHistory, \"9Y5BQerJrSoh4NTruKufqoePFmM=\", false, function () {\n  return [useOrderHistory];\n});\n\n_c = OrderHistory;\nexport default OrderHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderHistory\");","map":{"version":3,"sources":["/home/nhatnt/TN/FEcoffee/src/client/components/history/OrderHistory.jsx"],"names":["React","useOrderHistory","Redirector","Content","OrderHistory","orders","orderLoading","tableItems","setTableItems","useState","useMemo","window","scrollTo","columns","title","dataIndex","key","expandableColumns","render","toppings","map","topping","color","name","length","toUpperCase","id","useEffect","order","recipientName","orderAddress","phone","orderDate","Date","toLocaleDateString","toLocaleTimeString","orderStatus","user","details","getSubItems","record","detail","productName","product","size","quantity","note","sessionStorage","getItem","padding","minHeight","expandedRowRender"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Layout, Table, Tag, Descriptions, Spin } from 'antd';\nimport { useOrderHistory } from '../app-context/OrderHistoryProvider';\nimport Redirector from '../../Redirector';\n\nconst { Content } = Layout;\n\nfunction OrderHistory() {\n\tconst { orders, orderLoading } = useOrderHistory();\n\tconst [tableItems, setTableItems] = React.useState([]);\n\n\tReact.useMemo(() => {\n\t\twindow.scrollTo(0, 0);\n\t}, []);\n\n\tconst columns = React.useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\ttitle: 'Recipient Name',\n\t\t\t\tdataIndex: 'recipientName',\n\t\t\t\tkey: 'recipientName',\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Order Address',\n\t\t\t\tdataIndex: 'orderAddress',\n\t\t\t\tkey: 'orderAddress',\n\t\t\t},\n\n\t\t\t{\n\t\t\t\ttitle: 'Phone Number',\n\t\t\t\tdataIndex: 'phone',\n\t\t\t\tkey: 'phone',\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Order Date',\n\t\t\t\tdataIndex: 'orderDate',\n\t\t\t\tkey: 'orderDate',\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Order Status',\n\t\t\t\tdataIndex: 'orderStatus',\n\t\t\t\tkey: 'orderStatus',\n\t\t\t},\n\t\t],\n\t\t[]\n\t);\n\n\tconst expandableColumns = React.useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\ttitle: 'Product Name',\n\t\t\t\tdataIndex: 'productName',\n\t\t\t\tkey: 'productName',\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Size',\n\t\t\t\tdataIndex: 'size',\n\t\t\t\tkey: 'size',\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Toppings',\n\t\t\t\tdataIndex: 'toppings',\n\t\t\t\tkey: 'toppings',\n\t\t\t\trender: (toppings) => (\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{toppings.map((topping) => {\n\t\t\t\t\t\t\tlet color = topping.name.length > 6 ? 'geekblue' : 'green';\n\t\t\t\t\t\t\tif (topping.name === 'Chocolate') {\n\t\t\t\t\t\t\t\tcolor = 'volcano';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Tag color={color} key={topping.id}>\n\t\t\t\t\t\t\t\t\t{topping.name.toUpperCase()}\n\t\t\t\t\t\t\t\t</Tag>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</span>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Quantity',\n\t\t\t\tdataIndex: 'quantity',\n\t\t\t\tkey: 'quantity',\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Note',\n\t\t\t\tdataIndex: 'note',\n\t\t\t\tkey: 'note',\n\t\t\t},\n\t\t],\n\t\t[]\n\t);\n\n\tReact.useEffect(() => {\n\t\tsetTableItems(() => {\n\t\t\treturn orders.map((order) => {\n\t\t\t\treturn {\n\t\t\t\t\tkey: order.id, // required by ant table\n\t\t\t\t\trecipientName: order.recipientName,\n\t\t\t\t\torderAddress: order.orderAddress,\n\t\t\t\t\tphone: order.phone,\n\t\t\t\t\torderDate: new Date(order.orderDate).toLocaleDateString('en-US') + ' ' + new Date(order.orderDate).toLocaleTimeString('en-US'),\n\t\t\t\t\torderStatus: order.orderStatus,\n\t\t\t\t\tuser: { id: order.user.id },\n\t\t\t\t\tdetails: order.details,\n\t\t\t\t};\n\t\t\t});\n\t\t});\n\t}, [orders]);\n\n\tconst getSubItems = (record) => {\n\t\treturn record.details.map((detail) => {\n\t\t\treturn {\n\t\t\t\tkey: detail.id, // required by ant table\n\t\t\t\tproductName: detail.product.name,\n\t\t\t\tsize: detail.size.name,\n\t\t\t\ttoppings: [...detail.toppings],\n\t\t\t\tquantity: detail.quantity,\n\t\t\t\tnote: detail.note,\n\t\t\t};\n\t\t});\n\t};\n\n\tif (sessionStorage.getItem('starbucks-member') === null) {\n\t\treturn (\n\t\t\t<div style={{ padding: '88px 8vw' }}>\n\t\t\t\t<Redirector subTitle='If you signed in, your previous orders will appear here...' />\n\t\t\t</div>\n\t\t);\n\t}\n\treturn (\n\t\t<Content style={{ padding: '120px 8vw', minHeight: '60vh' }}>\n\t\t\t<Descriptions title='Order History' />\n\t\t\t<div className='overflow-x-auto'>\n\t\t\t\t<Spin spinning={orderLoading}>\n\t\t\t\t\t<Table\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\texpandable={{\n\t\t\t\t\t\t\texpandedRowRender: (record) => {\n\t\t\t\t\t\t\t\treturn <Table columns={expandableColumns} dataSource={getSubItems(record)} pagination={false} />;\n\t\t\t\t\t\t\t\t// if you want to return a value by calling a function in brackets: {function(params)}\n\t\t\t\t\t\t\t\t// if you want to call a function in brackets: {() => function(params)} (errors in this case)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdataSource={tableItems}\n\t\t\t\t\t\tpagination={false}\n\t\t\t\t\t/>\n\t\t\t\t</Spin>\n\t\t\t</div>\n\t\t</Content>\n\t);\n}\n\nexport default OrderHistory;\n"]},"metadata":{},"sourceType":"module"}