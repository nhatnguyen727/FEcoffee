{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/descriptions/style\";\nimport _Descriptions from \"antd/lib/descriptions\";\nimport \"antd/lib/tag/style\";\nimport _Tag from \"antd/lib/tag\";\nimport \"antd/lib/popconfirm/style\";\nimport _Popconfirm from \"antd/lib/popconfirm\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/typography/style\";\nimport _Typography from \"antd/lib/typography\";\n\nvar _jsxFileName = \"/home/nhatnt/TN/FEcoffee/src/client/components/cart/Cart.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useCart } from '../app-context/CartProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Text\n} = _Typography;\n\nfunction Cart() {\n  _s();\n\n  const {\n    cartItems,\n    removeCartItem\n  } = useCart();\n  const [tableItems, setTableItems] = React.useState([]);\n  const columns = React.useMemo(() => [{\n    title: 'Item',\n    dataIndex: 'item',\n    key: 'item'\n  }, {\n    title: 'Price$',\n    dataIndex: 'price',\n    key: 'price'\n  }, {\n    title: 'Toppings total',\n    dataIndex: 'toppingsTotal',\n    key: 'toppingsTotal'\n  }, {\n    title: 'Quantity',\n    dataIndex: 'quantity',\n    key: 'quantity'\n  }, {\n    title: 'Total',\n    dataIndex: 'total',\n    key: 'total'\n  }, {\n    title: 'Action',\n    dataIndex: 'action',\n    key: 'action',\n    render: (_, record) => /*#__PURE__*/_jsxDEV(_Popconfirm, {\n      title: \"Sure to delete?\",\n      onConfirm: () => removeCartItem(record.key),\n      children: /*#__PURE__*/_jsxDEV(_Button, {\n        danger: true,\n        style: {\n          width: 80\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 6\n    }, this)\n  }], [removeCartItem]);\n  const expandableColumns = React.useMemo(() => [{\n    title: 'Toppings',\n    dataIndex: 'toppings',\n    key: 'toppings',\n    render: toppings => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: toppings.map(topping => {\n        let color = topping.name.length > 6 ? 'geekblue' : 'green';\n\n        if (topping.name === 'Chocolate') {\n          color = 'volcano';\n        }\n\n        return /*#__PURE__*/_jsxDEV(_Tag, {\n          color: color,\n          children: topping.name.toUpperCase()\n        }, topping.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 6\n    }, this)\n  }, {\n    title: 'Note',\n    dataIndex: 'note',\n    key: 'note'\n  }], []);\n  React.useEffect(() => {\n    setTableItems(() => {\n      return cartItems.map(cartItem => {\n        return {\n          key: cartItem.id,\n          // required by ant table\n          item: cartItem.product.name,\n          price: cartItem.price,\n          quantity: cartItem.quantity,\n          total: cartItem.total,\n          note: cartItem.note,\n          toppings: [...cartItem.toppings],\n          toppingsTotal: cartItem.toppingsTotal\n        };\n      });\n    });\n  }, [cartItems]);\n\n  const getSubItems = record => {\n    return [{\n      key: record.key,\n      // required by ant table\n      note: record.note,\n      toppings: [...record.toppings]\n    }];\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Descriptions, {\n      title: \"Cart Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(_Table, {\n        columns: columns,\n        expandable: {\n          expandedRowRender: record => {\n            return /*#__PURE__*/_jsxDEV(_Table, {\n              columns: expandableColumns,\n              dataSource: getSubItems(record),\n              pagination: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this); // if you want to return a value by calling a function in brackets: {function(params)}\n            // if you want to call a function in brackets: {() => function(params)} (errors in this case)\n          }\n        },\n        dataSource: tableItems,\n        pagination: false,\n        summary: pageData => {\n          let totalItemPrice = 0.0;\n          let totalToppingsPrice = 0.0;\n          let totalQty = 0;\n          let totals = 0.0;\n          pageData.forEach(({\n            price,\n            toppingsTotal,\n            quantity,\n            total\n          }) => {\n            totalItemPrice += price;\n            totalToppingsPrice += toppingsTotal;\n            totalQty += quantity;\n            totals += total;\n          });\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(_Table.Summary.Row, {\n              children: [/*#__PURE__*/_jsxDEV(_Table.Summary.Cell, {\n                colSpan: 2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(_Table.Summary.Cell, {\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  strong: true,\n                  children: [\"$\", totalItemPrice.toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(_Table.Summary.Cell, {\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  strong: true,\n                  children: [\"$\", totalToppingsPrice.toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(_Table.Summary.Cell, {\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  strong: true,\n                  children: totalQty\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(_Table.Summary.Cell, {\n                colSpan: 2,\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  mark: true,\n                  strong: true,\n                  children: [\"$\", totals.toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 9\n            }, this)\n          }, void 0, false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Cart, \"kKAVhKAR2euqjRVogtBzsPLQbIM=\", false, function () {\n  return [useCart];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/home/nhatnt/TN/FEcoffee/src/client/components/cart/Cart.jsx"],"names":["React","useCart","Text","Cart","cartItems","removeCartItem","tableItems","setTableItems","useState","columns","useMemo","title","dataIndex","key","render","_","record","width","expandableColumns","toppings","map","topping","color","name","length","toUpperCase","id","useEffect","cartItem","item","product","price","quantity","total","note","toppingsTotal","getSubItems","expandedRowRender","pageData","totalItemPrice","totalToppingsPrice","totalQty","totals","forEach","toFixed"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Table, Button, Tag, Popconfirm, Typography, Descriptions } from 'antd';\nimport { useCart } from '../app-context/CartProvider';\n\nconst { Text } = Typography;\n\nfunction Cart() {\n\tconst { cartItems, removeCartItem } = useCart();\n\tconst [tableItems, setTableItems] = React.useState([]);\n\n\tconst columns = React.useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\ttitle: 'Item',\n\t\t\t\tdataIndex: 'item',\n\t\t\t\tkey: 'item',\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Price$',\n\t\t\t\tdataIndex: 'price',\n\t\t\t\tkey: 'price',\n\t\t\t},\n\n\t\t\t{\n\t\t\t\ttitle: 'Toppings total',\n\t\t\t\tdataIndex: 'toppingsTotal',\n\t\t\t\tkey: 'toppingsTotal',\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Quantity',\n\t\t\t\tdataIndex: 'quantity',\n\t\t\t\tkey: 'quantity',\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Total',\n\t\t\t\tdataIndex: 'total',\n\t\t\t\tkey: 'total',\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Action',\n\t\t\t\tdataIndex: 'action',\n\t\t\t\tkey: 'action',\n\t\t\t\trender: (_, record) => (\n\t\t\t\t\t<Popconfirm title='Sure to delete?' onConfirm={() => removeCartItem(record.key)}>\n\t\t\t\t\t\t<Button danger style={{ width: 80 }}>\n\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Popconfirm>\n\t\t\t\t),\n\t\t\t},\n\t\t],\n\t\t[removeCartItem]\n\t);\n\n\tconst expandableColumns = React.useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\ttitle: 'Toppings',\n\t\t\t\tdataIndex: 'toppings',\n\t\t\t\tkey: 'toppings',\n\t\t\t\trender: (toppings) => (\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{toppings.map((topping) => {\n\t\t\t\t\t\t\tlet color = topping.name.length > 6 ? 'geekblue' : 'green';\n\t\t\t\t\t\t\tif (topping.name === 'Chocolate') {\n\t\t\t\t\t\t\t\tcolor = 'volcano';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Tag color={color} key={topping.id}>\n\t\t\t\t\t\t\t\t\t{topping.name.toUpperCase()}\n\t\t\t\t\t\t\t\t</Tag>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</span>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Note',\n\t\t\t\tdataIndex: 'note',\n\t\t\t\tkey: 'note',\n\t\t\t},\n\t\t],\n\t\t[]\n\t);\n\n\tReact.useEffect(() => {\n\t\tsetTableItems(() => {\n\t\t\treturn cartItems.map((cartItem) => {\n\t\t\t\treturn {\n\t\t\t\t\tkey: cartItem.id, // required by ant table\n\t\t\t\t\titem: cartItem.product.name,\n\t\t\t\t\tprice: cartItem.price,\n\t\t\t\t\tquantity: cartItem.quantity,\n\t\t\t\t\ttotal: cartItem.total,\n\t\t\t\t\tnote: cartItem.note,\n\t\t\t\t\ttoppings: [...cartItem.toppings],\n\t\t\t\t\ttoppingsTotal: cartItem.toppingsTotal,\n\t\t\t\t};\n\t\t\t});\n\t\t});\n\t}, [cartItems]);\n\n\tconst getSubItems = (record) => {\n\t\treturn [\n\t\t\t{\n\t\t\t\tkey: record.key, // required by ant table\n\t\t\t\tnote: record.note,\n\t\t\t\ttoppings: [...record.toppings],\n\t\t\t},\n\t\t];\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Descriptions title='Cart Items' />\n\t\t\t<div className='overflow-x-auto'>\n\t\t\t\t<Table\n\t\t\t\t\tcolumns={columns}\n\t\t\t\t\texpandable={{\n\t\t\t\t\t\texpandedRowRender: (record) => {\n\t\t\t\t\t\t\treturn <Table columns={expandableColumns} dataSource={getSubItems(record)} pagination={false} />;\n\t\t\t\t\t\t\t// if you want to return a value by calling a function in brackets: {function(params)}\n\t\t\t\t\t\t\t// if you want to call a function in brackets: {() => function(params)} (errors in this case)\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\tdataSource={tableItems}\n\t\t\t\t\tpagination={false}\n\t\t\t\t\tsummary={(pageData) => {\n\t\t\t\t\t\tlet totalItemPrice = 0.0;\n\t\t\t\t\t\tlet totalToppingsPrice = 0.0;\n\t\t\t\t\t\tlet totalQty = 0;\n\t\t\t\t\t\tlet totals = 0.0;\n\n\t\t\t\t\t\tpageData.forEach(({ price, toppingsTotal, quantity, total }) => {\n\t\t\t\t\t\t\ttotalItemPrice += price;\n\t\t\t\t\t\t\ttotalToppingsPrice += toppingsTotal;\n\t\t\t\t\t\t\ttotalQty += quantity;\n\t\t\t\t\t\t\ttotals += total;\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Table.Summary.Row>\n\t\t\t\t\t\t\t\t\t<Table.Summary.Cell colSpan={2} />\n\t\t\t\t\t\t\t\t\t<Table.Summary.Cell>\n\t\t\t\t\t\t\t\t\t\t<Text strong={true}>${totalItemPrice.toFixed(2)}</Text>\n\t\t\t\t\t\t\t\t\t</Table.Summary.Cell>\n\t\t\t\t\t\t\t\t\t<Table.Summary.Cell>\n\t\t\t\t\t\t\t\t\t\t<Text strong={true}>${totalToppingsPrice.toFixed(2)}</Text>\n\t\t\t\t\t\t\t\t\t</Table.Summary.Cell>\n\t\t\t\t\t\t\t\t\t<Table.Summary.Cell>\n\t\t\t\t\t\t\t\t\t\t<Text strong={true}>{totalQty}</Text>\n\t\t\t\t\t\t\t\t\t</Table.Summary.Cell>\n\t\t\t\t\t\t\t\t\t<Table.Summary.Cell colSpan={2}>\n\t\t\t\t\t\t\t\t\t\t<Text mark strong={true}>\n\t\t\t\t\t\t\t\t\t\t\t${totals.toFixed(2)}\n\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t</Table.Summary.Cell>\n\t\t\t\t\t\t\t\t</Table.Summary.Row>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}