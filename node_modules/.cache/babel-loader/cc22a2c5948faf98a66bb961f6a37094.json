{"ast":null,"code":"import \"antd/lib/spin/style\";\nimport _Spin from \"antd/lib/spin\";\nimport \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\n\nvar _jsxFileName = \"/home/nhatnt/TN/FEcoffee/src/components/orders/Orders.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport EnhancedTable from '../react-table/EnhancedTable';\nimport OrderFieldsTableCell from './OrderFieldsTableCell';\nimport OrderDetails from './OrderDetails';\nimport OrderDetailProvider from '../app-context/OrderDetailProvider';\nimport { useOrders } from '../app-context/OrderProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Content\n} = _Layout;\n\nfunction Orders() {\n  _s();\n\n  const {\n    orders,\n    deleteOrders,\n    addOrder,\n    updateOrder,\n    orderLoading,\n    errorMsg,\n    resetErrorMsg\n  } = useOrders(); // no need adding order\n\n  const initOrder = React.useMemo(() => {\n    return {};\n  }, []);\n  const columns = React.useMemo(() => [{\n    Header: () => null,\n    id: 'expander',\n    // Use Cell to render an expander for each row.\n    // We can use the getToggleRowExpandedProps prop-getter to build the expander.\n    Cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"span\", { ...row.getToggleRowExpandedProps(),\n      children: row.isExpanded ? 'ğŸ‘‡' : 'ğŸ‘‰'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 24\n    }, this),\n    SubCell: () => null\n  }, {\n    Header: 'Recipient Name',\n    accessor: 'recipientName'\n  }, {\n    Header: 'Order Address',\n    accessor: 'orderAddress'\n  }, {\n    Header: 'Phone',\n    accessor: 'phone'\n  }, {\n    Header: 'Order Date',\n    accessor: 'orderDate'\n  }, {\n    Header: 'Order Status',\n    accessor: 'orderStatus'\n  }, {\n    Header: 'Username',\n    accessor: 'username'\n  }], []);\n  const data = React.useMemo(() => {\n    return orders.map(order => ({\n      id: order.id,\n      recipientName: order.recipientName,\n      orderAddress: order.orderAddress,\n      phone: order.phone,\n      orderDate: order.orderDate,\n      orderStatus: order.orderStatus,\n      user: {\n        id: order.user.id\n      },\n      username: order.user.username,\n      details: order.details\n    }));\n  }, [orders]); // no need adding order\n\n  const orderFieldsForm = () => {\n    return null;\n  };\n\n  const orderFieldsTableCell = (columnId, inputStyle, value, onChange = f => f, onBlur = f => f) => {\n    return /*#__PURE__*/_jsxDEV(OrderFieldsTableCell, {\n      columnId: columnId,\n      inputStyle: inputStyle,\n      value: value,\n      onChange: onChange,\n      onBlur: onBlur\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 10\n    }, this);\n  };\n\n  const OrderSubRow = props => {\n    return /*#__PURE__*/_jsxDEV(OrderDetailProvider, {\n      children: /*#__PURE__*/_jsxDEV(OrderDetails, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Content, {\n    style: {\n      margin: '16px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 24,\n        background: '#fff',\n        minHeight: 360\n      },\n      children: /*#__PURE__*/_jsxDEV(_Spin, {\n        spinning: orderLoading,\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(EnhancedTable, {\n          columns: columns,\n          data: data,\n          initialRecord: initOrder,\n          fieldsForm: orderFieldsForm,\n          fieldsTableCell: orderFieldsTableCell,\n          deleteRecordInDB: deleteOrders,\n          addRecordInDB: addOrder,\n          updateRecordInDB: updateOrder,\n          errorMsg: errorMsg,\n          resetErrorMsg: resetErrorMsg,\n          makeSubRow: OrderSubRow,\n          tableName: \"Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Orders, \"jorKDmDsnooOnAiPNsGqkPkhPqA=\", false, function () {\n  return [useOrders];\n});\n\n_c = Orders;\nexport default Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["/home/nhatnt/TN/FEcoffee/src/components/orders/Orders.jsx"],"names":["React","CssBaseline","EnhancedTable","OrderFieldsTableCell","OrderDetails","OrderDetailProvider","useOrders","Content","Orders","orders","deleteOrders","addOrder","updateOrder","orderLoading","errorMsg","resetErrorMsg","initOrder","useMemo","columns","Header","id","Cell","row","getToggleRowExpandedProps","isExpanded","SubCell","accessor","data","map","order","recipientName","orderAddress","phone","orderDate","orderStatus","user","username","details","orderFieldsForm","orderFieldsTableCell","columnId","inputStyle","value","onChange","f","onBlur","OrderSubRow","props","margin","padding","background","minHeight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Layout, Spin } from 'antd';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport EnhancedTable from '../react-table/EnhancedTable';\nimport OrderFieldsTableCell from './OrderFieldsTableCell';\nimport OrderDetails from './OrderDetails';\nimport OrderDetailProvider from '../app-context/OrderDetailProvider';\nimport { useOrders } from '../app-context/OrderProvider';\n\nconst { Content } = Layout;\n\nfunction Orders() {\n\tconst { orders, deleteOrders, addOrder, updateOrder, orderLoading, errorMsg, resetErrorMsg } = useOrders();\n\n\t// no need adding order\n\tconst initOrder = React.useMemo(() => {\n\t\treturn {};\n\t}, []);\n\n\tconst columns = React.useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\tHeader: () => null,\n\t\t\t\tid: 'expander',\n\t\t\t\t// Use Cell to render an expander for each row.\n\t\t\t\t// We can use the getToggleRowExpandedProps prop-getter to build the expander.\n\t\t\t\tCell: ({ row }) => <span {...row.getToggleRowExpandedProps()}>{row.isExpanded ? 'ğŸ‘‡' : 'ğŸ‘‰'}</span>,\n\t\t\t\tSubCell: () => null,\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: 'Recipient Name',\n\t\t\t\taccessor: 'recipientName',\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: 'Order Address',\n\t\t\t\taccessor: 'orderAddress',\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: 'Phone',\n\t\t\t\taccessor: 'phone',\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: 'Order Date',\n\t\t\t\taccessor: 'orderDate',\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: 'Order Status',\n\t\t\t\taccessor: 'orderStatus',\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: 'Username',\n\t\t\t\taccessor: 'username',\n\t\t\t},\n\t\t],\n\t\t[]\n\t);\n\n\tconst data = React.useMemo(() => {\n\t\treturn orders.map((order) => ({\n\t\t\tid: order.id,\n\t\t\trecipientName: order.recipientName,\n\t\t\torderAddress: order.orderAddress,\n\t\t\tphone: order.phone,\n\t\t\torderDate: order.orderDate,\n\t\t\torderStatus: order.orderStatus,\n\t\t\tuser: { id: order.user.id },\n\t\t\tusername: order.user.username,\n\t\t\tdetails: order.details,\n\t\t}));\n\t}, [orders]);\n\n\t// no need adding order\n\tconst orderFieldsForm = () => {\n\t\treturn null;\n\t};\n\n\tconst orderFieldsTableCell = (columnId, inputStyle, value, onChange = (f) => f, onBlur = (f) => f) => {\n\t\treturn <OrderFieldsTableCell columnId={columnId} inputStyle={inputStyle} value={value} onChange={onChange} onBlur={onBlur} />;\n\t};\n\n\tconst OrderSubRow = (props) => {\n\t\treturn (\n\t\t\t<OrderDetailProvider>\n\t\t\t\t<OrderDetails {...props} />\n\t\t\t</OrderDetailProvider>\n\t\t);\n\t};\n\n\treturn (\n\t\t<Content style={{ margin: '16px' }}>\n\t\t\t<div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n\t\t\t\t<Spin spinning={orderLoading}>\n\t\t\t\t\t<CssBaseline />\n\t\t\t\t\t<EnhancedTable\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\tinitialRecord={initOrder}\n\t\t\t\t\t\tfieldsForm={orderFieldsForm}\n\t\t\t\t\t\tfieldsTableCell={orderFieldsTableCell}\n\t\t\t\t\t\tdeleteRecordInDB={deleteOrders}\n\t\t\t\t\t\taddRecordInDB={addOrder}\n\t\t\t\t\t\tupdateRecordInDB={updateOrder}\n\t\t\t\t\t\terrorMsg={errorMsg}\n\t\t\t\t\t\tresetErrorMsg={resetErrorMsg}\n\t\t\t\t\t\tmakeSubRow={OrderSubRow}\n\t\t\t\t\t\ttableName='Orders'\n\t\t\t\t\t/>\n\t\t\t\t</Spin>\n\t\t\t</div>\n\t\t</Content>\n\t);\n}\n\nexport default Orders;\n"]},"metadata":{},"sourceType":"module"}