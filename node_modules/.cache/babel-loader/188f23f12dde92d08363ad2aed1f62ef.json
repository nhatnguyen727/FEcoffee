{"ast":null,"code":"var _jsxFileName = \"/home/nhatnt/TN/FEcoffee/src/components/users/AddUserDialog.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { TextField, makeStyles } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport { withStyles } from '@material-ui/core/styles';\nimport { useUsers } from '../app-context/UserProvider';\nimport './Users.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ValidationTextField = withStyles({\n  root: {\n    '& input:valid + fieldset': {\n      borderColor: 'green'\n    },\n    '& input:invalid + fieldset': {\n      borderColor: 'red'\n    },\n    '& input:valid:focus + fieldset': {\n      borderLeftWidth: 6\n    }\n  }\n})(TextField);\nconst generalInputStyle = {\n  variant: 'outlined',\n  size: 'small',\n  type: 'text',\n  required: true,\n  style: {\n    marginBottom: '10px',\n    marginLeft: '8%',\n    width: '84%'\n  }\n};\nconst useStyles = makeStyles(() => ({\n  inputProps: {\n    fontSize: 14\n  },\n  InputLabelProps: {\n    fontSize: 14\n  },\n  autocompleteFont: {\n    fontSize: 14\n  }\n}));\n\nfunction AddUserDialog({\n  record,\n  handleChange = f => f,\n  setErrors = f => f\n}) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    roles\n  } = useUsers();\n  const [emailError, setEmailError] = React.useState(false);\n  const [phoneError, setPhoneError] = React.useState(false);\n  const [usernameError, setUsernameError] = React.useState(false);\n  const [pwdError, setPwdError] = React.useState(false);\n  const [pwdConfirmError, setPwdConfirmError] = React.useState(false);\n  const [pwdValues, setPwdValues] = React.useState({\n    password: '',\n    showPassword: false\n  });\n  const [confirmPwdValues, setConfirmPwdValues] = React.useState({\n    confirmPwd: '',\n    showConfirmPassword: false\n  });\n  React.useEffect(() => {\n    if (record.role === '') {\n      handleChange('role', roles[roles.map(role => role.id).indexOf(1)]);\n    }\n\n    if (record.fullname === '' || record.address === '' || record.email === '' || record.phone === '' || record.username === '' || record.password === '' || emailError || phoneError || usernameError || pwdError || pwdConfirmError) {\n      setErrors(true);\n    } else {\n      setErrors(false);\n    }\n  }, [record, emailError, phoneError, usernameError, pwdError, pwdConfirmError, setErrors, handleChange, roles]);\n\n  const handleEmailChange = fieldName => ({\n    target: {\n      value\n    }\n  }) => {\n    handleChange(fieldName, value);\n\n    if (/^\\w+([-.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/.test(value)) {\n      setEmailError(false);\n    } else {\n      setEmailError(true);\n    }\n  };\n\n  const handlePhoneChange = fieldName => ({\n    target: {\n      value\n    }\n  }) => {\n    handleChange(fieldName, value);\n\n    if (/^[0-9]{10,11}$/.test(value)) {\n      setPhoneError(false);\n    } else {\n      setPhoneError(true);\n    }\n  };\n\n  const handleUsernameChange = fieldName => ({\n    target: {\n      value\n    }\n  }) => {\n    handleChange(fieldName, value);\n\n    if (/^(?=.{4,20}$)[a-zA-Z0-9._]+$/.test(value)) {\n      setUsernameError(false);\n    } else {\n      setUsernameError(true);\n    }\n  };\n\n  const handlePasswordChange = fieldName => ({\n    target: {\n      value\n    }\n  }) => {\n    handleChange(fieldName, value);\n    setPwdValues({ ...pwdValues,\n      [fieldName]: value\n    });\n\n    if (/^(?=\\S+$).{4,}$/.test(value)) {\n      setPwdError(false);\n    } else {\n      setPwdError(true);\n    }\n\n    if (value === confirmPwdValues.confirmPwd) {\n      setPwdConfirmError(false);\n    } else {\n      setPwdConfirmError(true);\n    }\n  };\n\n  const handleConfirmPasswordChange = fieldName => ({\n    target: {\n      value\n    }\n  }) => {\n    setConfirmPwdValues({ ...confirmPwdValues,\n      [fieldName]: value\n    });\n\n    if (value !== pwdValues.password) {\n      setPwdConfirmError(true);\n    } else {\n      setPwdConfirmError(false);\n    }\n  };\n\n  const handleClickShowPassword = e => {\n    e.preventDefault();\n    setPwdValues({ ...pwdValues,\n      showPassword: !pwdValues.showPassword\n    });\n  };\n\n  const handleClickShowConfirmPassword = e => {\n    e.preventDefault();\n    setConfirmPwdValues({ ...confirmPwdValues,\n      showConfirmPassword: !confirmPwdValues.showConfirmPassword\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ValidationTextField, { ...generalInputStyle,\n      label: \"Full Name\",\n      value: record.fullname,\n      onChange: e => handleChange('fullname', e.target.value),\n      autoFocus: true,\n      inputProps: {\n        className: classes.inputProps\n      },\n      InputLabelProps: {\n        className: classes.InputLabelProps\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ValidationTextField, { ...generalInputStyle,\n      required: false,\n      label: \"Photo URL\",\n      value: record.photo,\n      onChange: e => handleChange('photo', e.target.value),\n      inputProps: {\n        className: classes.inputProps\n      },\n      InputLabelProps: {\n        className: classes.InputLabelProps\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ValidationTextField, { ...generalInputStyle,\n      inputProps: {\n        pattern: '^\\\\w+([-.]\\\\w+)*@\\\\w+([-.]\\\\w+)*\\\\.\\\\w+([-.]\\\\w+)*$',\n        className: classes.inputProps\n      },\n      label: \"Email\",\n      value: record.email,\n      onChange: handleEmailChange('email'),\n      error: emailError,\n      helperText: emailError ? 'E-mail must be in following format: email@example.com' : '',\n      InputLabelProps: {\n        className: classes.InputLabelProps\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ValidationTextField, { ...generalInputStyle,\n      inputProps: {\n        pattern: '^[0-9]{10,11}$',\n        className: classes.inputProps\n      },\n      label: \"Phone Number\",\n      value: record.phone,\n      onChange: handlePhoneChange('phone'),\n      error: phoneError,\n      helperText: phoneError ? 'Phone number must be 10 to 11 digits.' : '',\n      InputLabelProps: {\n        className: classes.InputLabelProps\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ValidationTextField, { ...generalInputStyle,\n      label: \"Address\",\n      value: record.address,\n      onChange: e => handleChange('address', e.target.value),\n      inputProps: {\n        className: classes.inputProps\n      },\n      InputLabelProps: {\n        className: classes.InputLabelProps\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ValidationTextField, { ...generalInputStyle,\n      inputProps: {\n        pattern: '^(?=.{4,20}$)[a-zA-Z0-9._]+$',\n        className: classes.inputProps\n      },\n      label: \"Username\",\n      value: record.username,\n      onChange: handleUsernameChange('username'),\n      error: usernameError,\n      helperText: usernameError ? 'Username must be 4 to 20 chars, only alphanumeric chars, underscores and dots are allowed.' : '',\n      InputLabelProps: {\n        className: classes.InputLabelProps\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ValidationTextField, { ...generalInputStyle,\n        inputProps: {\n          pattern: '^(?=\\\\S+$).{4,}$',\n          className: classes.inputProps\n        },\n        label: \"Password\",\n        type: pwdValues.showPassword ? 'text' : 'password',\n        value: pwdValues.password,\n        onChange: handlePasswordChange('password'),\n        error: pwdError,\n        helperText: pwdError ? 'Password must be at least 4 chars, and not contains whitespace.' : '',\n        InputLabelProps: {\n          className: classes.InputLabelProps\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users__visibilityIcon\",\n        onClick: handleClickShowPassword,\n        children: pwdValues.showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ValidationTextField, {\n        style: {\n          position: 'relative'\n        },\n        ...generalInputStyle,\n        inputProps: {\n          pattern: '^(?=\\\\S+$).{4,}$',\n          className: classes.inputProps\n        },\n        label: \"Retype Password\",\n        type: confirmPwdValues.showConfirmPassword ? 'text' : 'password',\n        value: confirmPwdValues.confirmPwd,\n        onChange: handleConfirmPasswordChange('confirmPwd'),\n        error: pwdConfirmError,\n        helperText: pwdConfirmError ? 'Password and confirmation password do not match!' : '',\n        InputLabelProps: {\n          className: classes.InputLabelProps\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users__visibilityIcon\",\n        onClick: handleClickShowConfirmPassword,\n        children: confirmPwdValues.showConfirmPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 46\n        }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n      style: {\n        marginLeft: '8%',\n        width: '84%'\n      },\n      options: roles,\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n        label: \"Role\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 30\n      }, this),\n      defaultValue: roles[roles.map(role => role.id).indexOf(1)],\n      getOptionLabel: value => value.name,\n      onChange: (event, newValue) => handleChange('role', newValue),\n      disableClearable: true,\n      classes: {\n        input: classes.autocompleteFont\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddUserDialog, \"ZrWtzzTMcDXv/kodiXQCqnyOO3Y=\", false, function () {\n  return [useStyles, useUsers];\n});\n\n_c = AddUserDialog;\nexport default AddUserDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUserDialog\");","map":{"version":3,"sources":["/home/nhatnt/TN/FEcoffee/src/components/users/AddUserDialog.jsx"],"names":["React","TextField","makeStyles","Autocomplete","Visibility","VisibilityOff","withStyles","useUsers","ValidationTextField","root","borderColor","borderLeftWidth","generalInputStyle","variant","size","type","required","style","marginBottom","marginLeft","width","useStyles","inputProps","fontSize","InputLabelProps","autocompleteFont","AddUserDialog","record","handleChange","f","setErrors","classes","roles","emailError","setEmailError","useState","phoneError","setPhoneError","usernameError","setUsernameError","pwdError","setPwdError","pwdConfirmError","setPwdConfirmError","pwdValues","setPwdValues","password","showPassword","confirmPwdValues","setConfirmPwdValues","confirmPwd","showConfirmPassword","useEffect","role","map","id","indexOf","fullname","address","email","phone","username","handleEmailChange","fieldName","target","value","test","handlePhoneChange","handleUsernameChange","handlePasswordChange","handleConfirmPasswordChange","handleClickShowPassword","e","preventDefault","handleClickShowConfirmPassword","className","photo","pattern","position","params","name","event","newValue","input"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { TextField, makeStyles } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport { withStyles } from '@material-ui/core/styles';\nimport { useUsers } from '../app-context/UserProvider';\nimport './Users.css';\n\nconst ValidationTextField = withStyles({\n\troot: {\n\t\t'& input:valid + fieldset': {\n\t\t\tborderColor: 'green',\n\t\t},\n\t\t'& input:invalid + fieldset': {\n\t\t\tborderColor: 'red',\n\t\t},\n\t\t'& input:valid:focus + fieldset': {\n\t\t\tborderLeftWidth: 6,\n\t\t},\n\t},\n})(TextField);\n\nconst generalInputStyle = {\n\tvariant: 'outlined',\n\tsize: 'small',\n\ttype: 'text',\n\trequired: true,\n\tstyle: { marginBottom: '10px', marginLeft: '8%', width: '84%' },\n};\n\nconst useStyles = makeStyles(() => ({\n\tinputProps: {\n\t\tfontSize: 14,\n\t},\n\tInputLabelProps: {\n\t\tfontSize: 14,\n\t},\n\tautocompleteFont: {\n\t\tfontSize: 14,\n\t},\n}));\n\nfunction AddUserDialog({ record, handleChange = (f) => f, setErrors = (f) => f }) {\n\tconst classes = useStyles();\n\tconst { roles } = useUsers();\n\tconst [emailError, setEmailError] = React.useState(false);\n\tconst [phoneError, setPhoneError] = React.useState(false);\n\tconst [usernameError, setUsernameError] = React.useState(false);\n\tconst [pwdError, setPwdError] = React.useState(false);\n\tconst [pwdConfirmError, setPwdConfirmError] = React.useState(false);\n\tconst [pwdValues, setPwdValues] = React.useState({ password: '', showPassword: false });\n\tconst [confirmPwdValues, setConfirmPwdValues] = React.useState({ confirmPwd: '', showConfirmPassword: false });\n\n\tReact.useEffect(() => {\n\t\tif (record.role === '') {\n\t\t\thandleChange('role', roles[roles.map((role) => role.id).indexOf(1)]);\n\t\t}\n\t\tif (\n\t\t\trecord.fullname === '' ||\n\t\t\trecord.address === '' ||\n\t\t\trecord.email === '' ||\n\t\t\trecord.phone === '' ||\n\t\t\trecord.username === '' ||\n\t\t\trecord.password === '' ||\n\t\t\temailError ||\n\t\t\tphoneError ||\n\t\t\tusernameError ||\n\t\t\tpwdError ||\n\t\t\tpwdConfirmError\n\t\t) {\n\t\t\tsetErrors(true);\n\t\t} else {\n\t\t\tsetErrors(false);\n\t\t}\n\t}, [record, emailError, phoneError, usernameError, pwdError, pwdConfirmError, setErrors, handleChange, roles]);\n\n\tconst handleEmailChange = (fieldName) => ({ target: { value } }) => {\n\t\thandleChange(fieldName, value);\n\t\tif (/^\\w+([-.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/.test(value)) {\n\t\t\tsetEmailError(false);\n\t\t} else {\n\t\t\tsetEmailError(true);\n\t\t}\n\t};\n\n\tconst handlePhoneChange = (fieldName) => ({ target: { value } }) => {\n\t\thandleChange(fieldName, value);\n\t\tif (/^[0-9]{10,11}$/.test(value)) {\n\t\t\tsetPhoneError(false);\n\t\t} else {\n\t\t\tsetPhoneError(true);\n\t\t}\n\t};\n\n\tconst handleUsernameChange = (fieldName) => ({ target: { value } }) => {\n\t\thandleChange(fieldName, value);\n\t\tif (/^(?=.{4,20}$)[a-zA-Z0-9._]+$/.test(value)) {\n\t\t\tsetUsernameError(false);\n\t\t} else {\n\t\t\tsetUsernameError(true);\n\t\t}\n\t};\n\n\tconst handlePasswordChange = (fieldName) => ({ target: { value } }) => {\n\t\thandleChange(fieldName, value);\n\t\tsetPwdValues({ ...pwdValues, [fieldName]: value });\n\t\tif (/^(?=\\S+$).{4,}$/.test(value)) {\n\t\t\tsetPwdError(false);\n\t\t} else {\n\t\t\tsetPwdError(true);\n\t\t}\n\t\tif (value === confirmPwdValues.confirmPwd) {\n\t\t\tsetPwdConfirmError(false);\n\t\t} else {\n\t\t\tsetPwdConfirmError(true);\n\t\t}\n\t};\n\n\tconst handleConfirmPasswordChange = (fieldName) => ({ target: { value } }) => {\n\t\tsetConfirmPwdValues({ ...confirmPwdValues, [fieldName]: value });\n\t\tif (value !== pwdValues.password) {\n\t\t\tsetPwdConfirmError(true);\n\t\t} else {\n\t\t\tsetPwdConfirmError(false);\n\t\t}\n\t};\n\n\tconst handleClickShowPassword = (e) => {\n\t\te.preventDefault();\n\t\tsetPwdValues({ ...pwdValues, showPassword: !pwdValues.showPassword });\n\t};\n\n\tconst handleClickShowConfirmPassword = (e) => {\n\t\te.preventDefault();\n\t\tsetConfirmPwdValues({ ...confirmPwdValues, showConfirmPassword: !confirmPwdValues.showConfirmPassword });\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<ValidationTextField\n\t\t\t\t{...generalInputStyle}\n\t\t\t\tlabel='Full Name'\n\t\t\t\tvalue={record.fullname}\n\t\t\t\tonChange={(e) => handleChange('fullname', e.target.value)}\n\t\t\t\tautoFocus\n\t\t\t\tinputProps={{ className: classes.inputProps }}\n\t\t\t\tInputLabelProps={{ className: classes.InputLabelProps }}\n\t\t\t/>\n\t\t\t<ValidationTextField\n\t\t\t\t{...generalInputStyle}\n\t\t\t\trequired={false}\n\t\t\t\tlabel='Photo URL'\n\t\t\t\tvalue={record.photo}\n\t\t\t\tonChange={(e) => handleChange('photo', e.target.value)}\n\t\t\t\tinputProps={{ className: classes.inputProps }}\n\t\t\t\tInputLabelProps={{ className: classes.InputLabelProps }}\n\t\t\t/>\n\t\t\t<ValidationTextField\n\t\t\t\t{...generalInputStyle}\n\t\t\t\tinputProps={{ pattern: '^\\\\w+([-.]\\\\w+)*@\\\\w+([-.]\\\\w+)*\\\\.\\\\w+([-.]\\\\w+)*$', className: classes.inputProps }}\n\t\t\t\tlabel='Email'\n\t\t\t\tvalue={record.email}\n\t\t\t\tonChange={handleEmailChange('email')}\n\t\t\t\terror={emailError}\n\t\t\t\thelperText={emailError ? 'E-mail must be in following format: email@example.com' : ''}\n\t\t\t\tInputLabelProps={{ className: classes.InputLabelProps }}\n\t\t\t/>\n\t\t\t<ValidationTextField\n\t\t\t\t{...generalInputStyle}\n\t\t\t\tinputProps={{ pattern: '^[0-9]{10,11}$', className: classes.inputProps }}\n\t\t\t\tlabel='Phone Number'\n\t\t\t\tvalue={record.phone}\n\t\t\t\tonChange={handlePhoneChange('phone')}\n\t\t\t\terror={phoneError}\n\t\t\t\thelperText={phoneError ? 'Phone number must be 10 to 11 digits.' : ''}\n\t\t\t\tInputLabelProps={{ className: classes.InputLabelProps }}\n\t\t\t/>\n\t\t\t<ValidationTextField\n\t\t\t\t{...generalInputStyle}\n\t\t\t\tlabel='Address'\n\t\t\t\tvalue={record.address}\n\t\t\t\tonChange={(e) => handleChange('address', e.target.value)}\n\t\t\t\tinputProps={{ className: classes.inputProps }}\n\t\t\t\tInputLabelProps={{ className: classes.InputLabelProps }}\n\t\t\t/>\n\t\t\t<ValidationTextField\n\t\t\t\t{...generalInputStyle}\n\t\t\t\tinputProps={{ pattern: '^(?=.{4,20}$)[a-zA-Z0-9._]+$', className: classes.inputProps }}\n\t\t\t\tlabel='Username'\n\t\t\t\tvalue={record.username}\n\t\t\t\tonChange={handleUsernameChange('username')}\n\t\t\t\terror={usernameError}\n\t\t\t\thelperText={usernameError ? 'Username must be 4 to 20 chars, only alphanumeric chars, underscores and dots are allowed.' : ''}\n\t\t\t\tInputLabelProps={{ className: classes.InputLabelProps }}\n\t\t\t/>\n\t\t\t<div style={{ position: 'relative' }}>\n\t\t\t\t<ValidationTextField\n\t\t\t\t\t{...generalInputStyle}\n\t\t\t\t\tinputProps={{ pattern: '^(?=\\\\S+$).{4,}$', className: classes.inputProps }}\n\t\t\t\t\tlabel='Password'\n\t\t\t\t\ttype={pwdValues.showPassword ? 'text' : 'password'}\n\t\t\t\t\tvalue={pwdValues.password}\n\t\t\t\t\tonChange={handlePasswordChange('password')}\n\t\t\t\t\terror={pwdError}\n\t\t\t\t\thelperText={pwdError ? 'Password must be at least 4 chars, and not contains whitespace.' : ''}\n\t\t\t\t\tInputLabelProps={{ className: classes.InputLabelProps }}\n\t\t\t\t/>\n\t\t\t\t<div className='users__visibilityIcon' onClick={handleClickShowPassword}>\n\t\t\t\t\t{pwdValues.showPassword ? <Visibility /> : <VisibilityOff />}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div style={{ position: 'relative' }}>\n\t\t\t\t<ValidationTextField\n\t\t\t\t\tstyle={{ position: 'relative' }}\n\t\t\t\t\t{...generalInputStyle}\n\t\t\t\t\tinputProps={{ pattern: '^(?=\\\\S+$).{4,}$', className: classes.inputProps }}\n\t\t\t\t\tlabel='Retype Password'\n\t\t\t\t\ttype={confirmPwdValues.showConfirmPassword ? 'text' : 'password'}\n\t\t\t\t\tvalue={confirmPwdValues.confirmPwd}\n\t\t\t\t\tonChange={handleConfirmPasswordChange('confirmPwd')}\n\t\t\t\t\terror={pwdConfirmError}\n\t\t\t\t\thelperText={pwdConfirmError ? 'Password and confirmation password do not match!' : ''}\n\t\t\t\t\tInputLabelProps={{ className: classes.InputLabelProps }}\n\t\t\t\t/>\n\t\t\t\t<div className='users__visibilityIcon' onClick={handleClickShowConfirmPassword}>\n\t\t\t\t\t{confirmPwdValues.showConfirmPassword ? <Visibility /> : <VisibilityOff />}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Autocomplete\n\t\t\t\tstyle={{ marginLeft: '8%', width: '84%' }}\n\t\t\t\toptions={roles}\n\t\t\t\trenderInput={(params) => <TextField {...params} label='Role' />}\n\t\t\t\tdefaultValue={roles[roles.map((role) => role.id).indexOf(1)]}\n\t\t\t\tgetOptionLabel={(value) => value.name}\n\t\t\t\tonChange={(event, newValue) => handleChange('role', newValue)}\n\t\t\t\tdisableClearable\n\t\t\t\tclasses={{ input: classes.autocompleteFont }}\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport default AddUserDialog;\n"]},"metadata":{},"sourceType":"module"}