{"ast":null,"code":"var _jsxFileName = \"/home/nhatnt/TN/FEcoffee/src/client/components/app-context/FavoriteProvider.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useContext, createContext, useState, useCallback, useMemo, useEffect } from 'react';\nimport { SERVER_URL } from '../../../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FavoriteContext = /*#__PURE__*/createContext();\nexport const useFavorites = () => {\n  _s();\n\n  return useContext(FavoriteContext);\n};\n\n_s(useFavorites, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nfunction FavoriteProvider({\n  children\n}) {\n  _s2();\n\n  const [favLoading, setFavLoading] = useState(false);\n  const [favorites, setFavorites] = useState([]);\n  const [dataChanged, setDataChanged] = useState(false);\n  const refreshPage = useCallback(() => {\n    if (sessionStorage.getItem('starbucks-member') !== null) {\n      setFavLoading(true);\n      let userId = JSON.parse(sessionStorage.getItem('starbucks-member')).id;\n      const token = sessionStorage.getItem('starbucks-jwt');\n      fetch(SERVER_URL + `/favorite/user=${userId}`, {\n        headers: {\n          Authorization: token\n        }\n      }).then(response => response.json()).then(result => {\n        setFavorites(result.products);\n        localStorage.setItem('starbucks-favorite', JSON.stringify(result.products));\n      }).then(() => setFavLoading(false));\n    }\n  }, []);\n  useMemo(() => {\n    refreshPage();\n  }, [refreshPage]);\n\n  const updateFavorite = id => {\n    // for animation of favorite button works smooth, we don't use state here because it causes rendering the product list,\n    // therefore, it makes the animation delayed\n    let favoritesLocal = localStorage.getItem('starbucks-favorite') !== [] ? JSON.parse(localStorage.getItem('starbucks-favorite')) : []; // update in localStorage\n\n    localStorage.setItem('starbucks-favorite', JSON.stringify(favoritesLocal.filter(fav => fav.id !== id))); // update in database\n\n    if (sessionStorage.getItem('starbucks-member') !== null) {\n      let userId = JSON.parse(sessionStorage.getItem('starbucks-member')).id;\n      let favProducts = {\n        id: userId,\n        products: favoritesLocal.filter(fav => fav.id !== id)\n      };\n      const token = sessionStorage.getItem('starbucks-jwt');\n      fetch(SERVER_URL + `/favorite/user=${userId}`, {\n        method: 'PUT',\n        headers: {\n          Authorization: token,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(favProducts)\n      }).then(() => setDataChanged(true));\n    }\n  };\n\n  useEffect(() => {\n    if (dataChanged) {\n      refreshPage();\n      setDataChanged(false); // reset back to initial value\n    }\n  }, [dataChanged, refreshPage]);\n  return /*#__PURE__*/_jsxDEV(FavoriteContext.Provider, {\n    value: {\n      favorites,\n      favLoading,\n      updateFavorite\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(FavoriteProvider, \"5Ic05Zz0BGz76LVW3FVtfHd6LDg=\");\n\n_c = FavoriteProvider;\nexport default FavoriteProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"FavoriteProvider\");","map":{"version":3,"sources":["/home/nhatnt/TN/FEcoffee/src/client/components/app-context/FavoriteProvider.jsx"],"names":["useContext","createContext","useState","useCallback","useMemo","useEffect","SERVER_URL","FavoriteContext","useFavorites","FavoriteProvider","children","favLoading","setFavLoading","favorites","setFavorites","dataChanged","setDataChanged","refreshPage","sessionStorage","getItem","userId","JSON","parse","id","token","fetch","headers","Authorization","then","response","json","result","products","localStorage","setItem","stringify","updateFavorite","favoritesLocal","filter","fav","favProducts","method","body"],"mappings":"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","sourcesContent":["import { useContext, createContext, useState, useCallback, useMemo, useEffect } from 'react';\nimport { SERVER_URL } from '../../../constants';\n\nconst FavoriteContext = createContext();\n\nexport const useFavorites = () => useContext(FavoriteContext);\n\nfunction FavoriteProvider({ children }) {\n\tconst [favLoading, setFavLoading] = useState(false);\n\tconst [favorites, setFavorites] = useState([]);\n\tconst [dataChanged, setDataChanged] = useState(false);\n\n\tconst refreshPage = useCallback(() => {\n\t\tif (sessionStorage.getItem('starbucks-member') !== null) {\n\t\t\tsetFavLoading(true);\n\t\t\tlet userId = JSON.parse(sessionStorage.getItem('starbucks-member')).id;\n\t\t\tconst token = sessionStorage.getItem('starbucks-jwt');\n\t\t\tfetch(SERVER_URL + `/favorite/user=${userId}`, {\n\t\t\t\theaders: { Authorization: token },\n\t\t\t})\n\t\t\t\t.then((response) => response.json())\n\t\t\t\t.then((result) => {\n\t\t\t\t\tsetFavorites(result.products);\n\t\t\t\t\tlocalStorage.setItem('starbucks-favorite', JSON.stringify(result.products));\n\t\t\t\t})\n\t\t\t\t.then(() => setFavLoading(false));\n\t\t}\n\t}, []);\n\n\tuseMemo(() => {\n\t\trefreshPage();\n\t}, [refreshPage]);\n\n\tconst updateFavorite = (id) => {\n\t\t// for animation of favorite button works smooth, we don't use state here because it causes rendering the product list,\n\t\t// therefore, it makes the animation delayed\n\t\tlet favoritesLocal = localStorage.getItem('starbucks-favorite') !== [] ? JSON.parse(localStorage.getItem('starbucks-favorite')) : [];\n\t\t// update in localStorage\n\t\tlocalStorage.setItem('starbucks-favorite', JSON.stringify(favoritesLocal.filter((fav) => fav.id !== id)));\n\t\t// update in database\n\t\tif (sessionStorage.getItem('starbucks-member') !== null) {\n\t\t\tlet userId = JSON.parse(sessionStorage.getItem('starbucks-member')).id;\n\t\t\tlet favProducts = { id: userId, products: favoritesLocal.filter((fav) => fav.id !== id) };\n\t\t\tconst token = sessionStorage.getItem('starbucks-jwt');\n\t\t\tfetch(SERVER_URL + `/favorite/user=${userId}`, {\n\t\t\t\tmethod: 'PUT',\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: token,\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(favProducts),\n\t\t\t}).then(() => setDataChanged(true));\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tif (dataChanged) {\n\t\t\trefreshPage();\n\t\t\tsetDataChanged(false); // reset back to initial value\n\t\t}\n\t}, [dataChanged, refreshPage]);\n\n\treturn <FavoriteContext.Provider value={{ favorites, favLoading, updateFavorite }}>{children}</FavoriteContext.Provider>;\n}\n\nexport default FavoriteProvider;\n"]},"metadata":{},"sourceType":"module"}