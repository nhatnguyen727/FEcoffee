{"ast":null,"code":"var _jsxFileName = \"/home/nhatnt/TN/FEcoffee/src/components/coupons/AddCouponDialog.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ValidationTextField = withStyles({\n  root: {\n    '& input:valid + fieldset': {\n      borderColor: 'green'\n    },\n    '& input:invalid + fieldset': {\n      borderColor: 'red'\n    },\n    '& input:valid:focus + fieldset': {\n      borderLeftWidth: 6\n    }\n  }\n})(TextField);\nconst generalInputStyle = {\n  variant: 'outlined',\n  size: 'small',\n  type: 'text',\n  required: true,\n  fullWidth: true,\n  style: {\n    marginBottom: '10px'\n  }\n};\nconst useStyles = makeStyles(() => ({\n  inputProps: {\n    fontSize: 14\n  },\n  InputLabelProps: {\n    fontSize: 14\n  }\n}));\n\nfunction AddCouponDialog({\n  record,\n  handleChange = f => f,\n  setErrors = f => f\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [codeError, setCodeError] = React.useState(false);\n  React.useEffect(() => {\n    if (record.name === '' || record.code === '' || codeError) {\n      setErrors(true);\n    } else {\n      setErrors(false);\n    }\n  }, [record, codeError, setErrors]);\n\n  const handleCodeChange = fieldName => ({\n    target: {\n      value\n    }\n  }) => {\n    handleChange(fieldName, value);\n\n    if (/^(?=.{4,20}$)[a-zA-Z0-9]+$/.test(value)) {\n      setCodeError(false);\n    } else {\n      setCodeError(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ValidationTextField, { ...generalInputStyle,\n      label: \"Name\",\n      autoFocus: true,\n      value: record.name,\n      onChange: e => handleChange('name', e.target.value),\n      inputProps: {\n        className: classes.inputProps\n      },\n      InputLabelProps: {\n        className: classes.InputLabelProps\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ValidationTextField, { ...generalInputStyle,\n      inputProps: {\n        pattern: '^(?=.{4,20}$)[a-zA-Z0-9]+$',\n        className: classes.inputProps\n      },\n      label: \"Code\",\n      value: record.code,\n      onChange: handleCodeChange('code'),\n      error: codeError,\n      helperText: codeError ? 'Coupon code must be 4 to 20 chars, only alphanumeric chars are allowed.' : '',\n      InputLabelProps: {\n        className: classes.InputLabelProps\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ValidationTextField, { ...generalInputStyle,\n      type: \"number\",\n      inputProps: {\n        min: '0',\n        step: '1',\n        className: classes.inputProps\n      },\n      label: \"Discount %\",\n      value: record.discount,\n      onChange: e => handleChange('discount', e.target.value),\n      InputLabelProps: {\n        className: classes.InputLabelProps\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }, this);\n}\n\n_s(AddCouponDialog, \"fjRssqPW40f9C2veDs8SYi4hqf0=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddCouponDialog;\nexport default AddCouponDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCouponDialog\");","map":{"version":3,"sources":["/home/nhatnt/TN/FEcoffee/src/components/coupons/AddCouponDialog.jsx"],"names":["React","TextField","withStyles","makeStyles","ValidationTextField","root","borderColor","borderLeftWidth","generalInputStyle","variant","size","type","required","fullWidth","style","marginBottom","useStyles","inputProps","fontSize","InputLabelProps","AddCouponDialog","record","handleChange","f","setErrors","classes","codeError","setCodeError","useState","useEffect","name","code","handleCodeChange","fieldName","target","value","test","e","className","pattern","min","step","discount"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\n\nconst ValidationTextField = withStyles({\n\troot: {\n\t\t'& input:valid + fieldset': {\n\t\t\tborderColor: 'green',\n\t\t},\n\t\t'& input:invalid + fieldset': {\n\t\t\tborderColor: 'red',\n\t\t},\n\t\t'& input:valid:focus + fieldset': {\n\t\t\tborderLeftWidth: 6,\n\t\t},\n\t},\n})(TextField);\n\nconst generalInputStyle = {\n\tvariant: 'outlined',\n\tsize: 'small',\n\ttype: 'text',\n\trequired: true,\n\tfullWidth: true,\n\tstyle: { marginBottom: '10px' },\n};\n\nconst useStyles = makeStyles(() => ({\n\tinputProps: {\n\t\tfontSize: 14,\n\t},\n\tInputLabelProps: {\n\t\tfontSize: 14,\n\t},\n}));\n\nfunction AddCouponDialog({ record, handleChange = (f) => f, setErrors = (f) => f }) {\n\tconst classes = useStyles();\n\tconst [codeError, setCodeError] = React.useState(false);\n\n\tReact.useEffect(() => {\n\t\tif (record.name === '' || record.code === '' || codeError) {\n\t\t\tsetErrors(true);\n\t\t} else {\n\t\t\tsetErrors(false);\n\t\t}\n\t}, [record, codeError, setErrors]);\n\n\tconst handleCodeChange = (fieldName) => ({ target: { value } }) => {\n\t\thandleChange(fieldName, value);\n\t\tif (/^(?=.{4,20}$)[a-zA-Z0-9]+$/.test(value)) {\n\t\t\tsetCodeError(false);\n\t\t} else {\n\t\t\tsetCodeError(true);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<ValidationTextField\n\t\t\t\t{...generalInputStyle}\n\t\t\t\tlabel='Name'\n\t\t\t\tautoFocus\n\t\t\t\tvalue={record.name}\n\t\t\t\tonChange={(e) => handleChange('name', e.target.value)}\n\t\t\t\tinputProps={{ className: classes.inputProps }}\n\t\t\t\tInputLabelProps={{ className: classes.InputLabelProps }}\n\t\t\t/>\n\t\t\t<ValidationTextField\n\t\t\t\t{...generalInputStyle}\n\t\t\t\tinputProps={{ pattern: '^(?=.{4,20}$)[a-zA-Z0-9]+$', className: classes.inputProps }}\n\t\t\t\tlabel='Code'\n\t\t\t\tvalue={record.code}\n\t\t\t\tonChange={handleCodeChange('code')}\n\t\t\t\terror={codeError}\n\t\t\t\thelperText={codeError ? 'Coupon code must be 4 to 20 chars, only alphanumeric chars are allowed.' : ''}\n\t\t\t\tInputLabelProps={{ className: classes.InputLabelProps }}\n\t\t\t/>\n\t\t\t<ValidationTextField\n\t\t\t\t{...generalInputStyle}\n\t\t\t\ttype='number'\n\t\t\t\tinputProps={{ min: '0', step: '1', className: classes.inputProps }}\n\t\t\t\tlabel='Discount %'\n\t\t\t\tvalue={record.discount}\n\t\t\t\tonChange={(e) => handleChange('discount', e.target.value)}\n\t\t\t\tInputLabelProps={{ className: classes.InputLabelProps }}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default AddCouponDialog;\n"]},"metadata":{},"sourceType":"module"}